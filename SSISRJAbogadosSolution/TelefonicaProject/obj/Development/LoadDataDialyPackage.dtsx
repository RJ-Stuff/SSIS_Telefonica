<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/11/2017 4:44:15 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DESKTOP-UV63D3T"
  DTS:CreatorName="DESKTOP-UV63D3T\rigo"
  DTS:DTSID="{E6864BA8-6F53-4EE0-BE90-DF1C062DAA7D}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="10250"
  DTS:ObjectName="LoadDataDialyPackage"
  DTS:PackageType="5"
  DTS:VersionBuild="109"
  DTS:VersionGUID="{18571182-5CD4-4ECE-967B-2C194026A71E}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[192.168.1.170.RJAbogados.mgeldres]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{5F46BF68-BA82-4A99-8018-AB1FF26B1FB3}"
      DTS:ObjectName="192.168.1.170.RJAbogados.mgeldres">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=192.168.1.170;User ID=mgeldres;Initial Catalog=RJAbogados;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA1QCxN6LYokC3lF4Z1po4bgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACiMabim8JsZKcURglaDILvdDdTDSPrFUCUfj/dKCsXMQAAAAAOgAAAAAIAACAAAAAnDFD5k9Pl5o972vDl+HoTgaRh/nNKfwk2+JpMUj5fUDAAAADeUXJvGFm1OvM90jvtuHgw7N2OSHLEhyS5e4O02k2RMAuOGzZqXjfQRKvWEZQRfXdAAAAAvv/fCwD0CvpF+nF/ikZOZly9ZBIldT8dYzbFx9ZE6rpXXqPJSaLS6OWkl7UmcFtXxXw+XVQennbuOtFObPtXgA</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ACTUALIZAR TRAN_DEUDA.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{22C99E60-9DED-4858-8633-ED518F095B3E}"
      DTS:ObjectName="ACTUALIZAR TRAN_DEUDA.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSIS_Configuration\ACTUALIZAR TRAN_DEUDA.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LUNA ACTUALIZAR ESTADO TELEFONO.sql]"
      DTS:CreationName="FILE"
      DTS:DTSID="{AC781591-1F07-4EAB-AEA2-970659A10888}"
      DTS:ObjectName="LUNA ACTUALIZAR ESTADO TELEFONO.sql">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="C:\SSIS_Configuration\LUNA ACTUALIZAR ESTADO TELEFONO.sql" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{736EE893-49FC-46B7-843F-C6EC2408BF15}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="connectionString">
      <DTS:VariableValue
        DTS:DataType="8">rigo:123@192.168.56.101</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1561F1C-0E7E-48F0-AFC8-746E19D1CBB2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="downloadEndTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2017 10:39:00 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B71CB44A-1E14-494F-90EF-EBCF56C2F179}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="downloadStartTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2017 10:39:30 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4E4164F2-20B3-4E72-B145-7618AABC5C42}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="emailFrom">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FED7463D-E93E-4DBF-B454-2ACD8ADF5FD2}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="emailFromPassword">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8BA7BACD-45DD-41B0-853A-0E0EEA536591}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="emailsBcc">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{27171463-0344-42EF-B4E3-605D89C5DC47}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="emailsCc">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B5DA8C01-CEA9-4DB5-82B1-6E02D6596E58}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="emailsTo">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3218622E-925E-451F-981B-E5996B7E0A70}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="errorString">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{673A30BC-6DB1-4DD7-A8DD-492E1F16E424}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="excelFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA895C23-8E1D-4F14-8762-13C6EDCAEFD6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="localDir">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{98E35D2D-0A38-41A8-B6A2-FE87747EE7C1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteDir">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1CF3566E-8B6B-4508-86CA-573D33127836}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="remoteFiles">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CC3639E5-FBDE-4432-8C05-C9C74D3E5E18}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="reportOutputDir">
      <DTS:VariableValue
        DTS:DataType="8">C:\\Users\\sistemas\\Desktop\\output</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D36AF185-AB50-4B36-BBCB-988CC7D8105A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="reportRemoteOutputDir">
      <DTS:VariableValue
        DTS:DataType="8">la prueba</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D3BA659-5D9A-4451-BA7A-3FE6E3EAEE72}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="sendExcelFile">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3DABDDF4-A6ED-46DB-A44A-DDD499355A3A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlConnectionString">
      <DTS:VariableValue
        DTS:DataType="8">Server=192.168.1.170;Database=RJAbogados;Integrated Security=false;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A5071F6D-D379-4225-B51A-1F0CAA67CF6A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlPassword">
      <DTS:VariableValue
        DTS:DataType="8">asescomadmin2014.rar</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0585640A-EEA2-4A1B-8290-28119E05B6CE}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SqlQuery1EndTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2017 10:32:22 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{14935A49-FB00-42C2-B03A-D670EE13FC36}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SqlQuery1StartTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2017 10:32:26 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B178FCB8-71F2-4C72-98C6-6BF2E3E72ED7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SqlQuery2EndTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2017 10:32:33 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{26B7C681-B011-4963-BD0E-A2D506ED00D1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SqlQuery2StartTime">
      <DTS:VariableValue
        DTS:DataType="7">6/15/2017 10:32:40 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FB5AD6D-8036-4A23-84DD-0C2EEDFBCF4E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="sqlUser">
      <DTS:VariableValue
        DTS:DataType="8">mgeldres</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8AB09E3F-4399-4B56-B196-8FB15C2B29F6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="timeOut">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Check remote files"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:DTSID="{80BA233D-C9D6-465D-863A-FA8A1E90ACBC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Check remote files"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b34daebe81054142929bd1e2fdac2fae"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::connectionString,User::remoteDir,User::remoteFiles,User::timeOut"
          ReadWriteVariables="User::errorString">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_b34daebe81054142929bd1e2fdac2fae")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_b34daebe81054142929bd1e2fdac2fae")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_b34daebe81054142929bd1e2fdac2fae.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{b0176b3a-1dc3-4d92-8ea1-bc1aec5a6286}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_b34daebe81054142929bd1e2fdac2fae</RootNamespace>
    <AssemblyName>ST_b34daebe81054142929bd1e2fdac2fae</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Diagnostics;
#endregion

namespace ST_b34daebe81054142929bd1e2fdac2fae
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                String connectionString = (String)Dts.Variables["User::connectionString"].Value;
                String remoteFilesString = (String)Dts.Variables["User::remoteFiles"].Value;
                String remoteDir = (String)Dts.Variables["User::remoteDir"].Value;
                int timeOut = (int)Dts.Variables["User::timeOut"].Value;

                var remoteFiles = remoteFilesString
                    .Split(',')
                    .ToList()
                    .Select(str => String.Format("{0}{1}{2}",
                    remoteDir, remoteDir.EndsWith("/") ? "" : "/",
                    str.Trim().Replace("$$$", DateTime.Now.ToString("ddMM"))));

                while (!remoteFiles.All(remoteFile => StatRemoteFile(connectionString, remoteFile)))
                {
                    Console.WriteLine(String.Format("Waiting {0}...until both files exist!",
                        TimeSpan.FromSeconds(timeOut).ToString(@"hh\:mm\:ss\:fff")));
                    System.Threading.Thread.Sleep(timeOut);
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        static Boolean StatRemoteFile(String connetionStr, String remoteFile)
        {
            var proc = new Process
            {
                StartInfo = new ProcessStartInfo
                {
                    FileName = "winscp.com",
                    Arguments = String.Format("/command \"open sftp://{0}\" \"stat \"\"{1}\"\"\" \"exit\"", connetionStr, remoteFile),
                    UseShellExecute = false,
                    RedirectStandardOutput = true,
                    CreateNoWindow = true
                }
            };

            proc.Start();
            proc.WaitForExit();
            return proc.ExitCode == 0;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_b34daebe81054142929bd1e2fdac2fae</msb:CodeName>
		<msb:DisplayName>ST_b34daebe81054142929bd1e2fdac2fae</msb:DisplayName>
		<msb:ProjectId>{A4C8E58B-468A-4CB5-BD36-867AB8F4DBA1}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_b34daebe81054142929bd1e2fdac2fae.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b34daebe81054142929bd1e2fdac2fae.Properties.Settings.get_Default():ST_b34daebe81054142929bd1e2fdac2fae.Properties.Sett" +
    "ings")]

namespace ST_b34daebe81054142929bd1e2fdac2fae.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b34daebe81054142929bd1e2fdac2fae.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b34daebe81054142929bd1e2fdac2fae.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_b34daebe81054142929bd1e2fdac2fae.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_b34daebe81054142929bd1e2fdac2fae.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_b34daebe81054142929bd1e2fdac2fae.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b34daebe81054142929bd1e2fdac2fae.dll">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
yQE0AREA1QA4AQYGdgA8AVaAuQY/AVaAqQE/AQYAqQVDAQYAFARDAVAgAAAAAIYACAUGAAEAsCEA
AAAAkQA2AUYBAQAUIgAAAACGGLMFBgADABwiAAAAAIMYswUGAAMAJCIAAAAAkwiVBUwBAwBQIgAA
AACTCLEBUQEDAFciAAAAAJMIvQFWAQMAXyIAAAAAlggUB1wBBABmIgAAAACGGLMFBgAEAG4iAAAA
AJEYuQVhAQQAHCIAAAAAhhizBQYABAB8IgAAAACDABYAjAAEANkiAAAAAIMAIQD8AAUAAAABAMAF
AAACAEUBAAABAOMDAAABAM0FAAABAEUBCQCzBQEAEQCzBQYAGQCzBQoAKQCzBRAAMQCzBRAAOQCz
BRAAQQCzBRAASQCzBRAAUQCzBRAAWQCzBRAAYQCzBRAAaQCzBQYAmQCzBQYAsQCzBQYA0QCzBRUA
cQDJBioA4QCiBi8A6QDTBDQA8QDPAzoA+QACBz4AEQE1B0UADACzBWIAEQH7BmgAgQDkBYYAgQAl
BIwA+QDtBpEAKQGOAZcAMQF+BZwAFACzBWIAEQGnBKkA4QAgBwEAiQDyALwA8QDZA8AAOQGzBQYA
QQGzBQYAQQFYARAA+QDtBsUAQQHfBhAAQQG7A8wAQQE8B8wAQQFfB8wAOQFfBdEAOQEvB9gAOQEI
BwYAOQHlANwAcQCzBQYAoQCzBQYASQEkAeAASQFyB+kAuQCzBe8A2QCzBQYA+QAuBPwA+QDjBLwA
qQBXBwEBqQAlBIwA+QDNAAYB+QDtBgwBCAAUACYBCAAYACsBKQB7AJwBLgALAHQBLgATAH0BLgAb
AJwBLgAjAKUBLgArAM4BLgAzAM4BLgA7AM4BLgBDAKUBLgBLANQBLgBTAM4BLgBbAOsBQwBjACsB
SQB7AJwBYQBrACsBYwBzACsBwwBrACsBGwD3AAMAAQAEAAMAAACZBWUBAADRAWoBAAAYB28BAgAF
AAMAAgAGAAUAAQAHAAUAAgAIAAcAWgChAASAAAABAAAA6BjtQAAAAAAAAKkAAAAEAAAAAAAAAAAA
AAAUAX4AAAAAAAsAAAAAAAAAAAAAAB0BNwQAAAAABAAAAAAAAAAAAAAAFAHcBAAAAAALAAAAAAAA
AAAAAAAdAVcAAAAAAAQAAAAAAAAAAAAAABQBnQEAAAAAAAAAAAEAAAAhBgAABQACAAYAAgArAFYA
LwCBAD0AVgAAAAAAADw+Y19fRGlzcGxheUNsYXNzMF8wADxNYWluPmJfXzAAPE1haW4+Yl9fMQBJ
RW51bWVyYWJsZWAxAExpc3RgMQBJbnQzMgBGdW5jYDIAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
aWMAVGhyZWFkAFNUX2IzNGRhZWJlODEwNTQxNDI5MjliZDFlMmZkYWMyZmFlAFJlcGxhY2UAZGVm
YXVsdEluc3RhbmNlAGdldF9FeGl0Q29kZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBFbnVtZXJhYmxl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAFN0YXRSZW1vdGVGaWxlAHJlbW90
ZUZpbGUAQ29uc29sZQBzZXRfRmlsZU5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBXcml0ZUxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJl
AHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5l
cmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFz
c2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJs
eUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21w
aWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3Nl
bWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUA
QXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNl
dF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uVGhyZWFk
aW5nAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAY29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBF
bmRzV2l0aABNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50
TW9kZWwAQWxsAFNUX2IzNGRhZWJlODEwNTQxNDI5MjliZDFlMmZkYWMyZmFlLmRsbABnZXRfSXRl
bQBTeXN0ZW0AVHJpbQBFbnVtAHJlc291cmNlTWFuAFRpbWVTcGFuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhj
ZXB0aW9uAEN1bHR1cmVJbmZvAHNldF9TdGFydEluZm8AUHJvY2Vzc1N0YXJ0SW5mbwBTbGVlcABT
eXN0ZW0uTGlucQBDaGFyAGdldF9SZXNvdXJjZU1hbmFnZXIAcmVtb3RlRGlyAC5jdG9yAC5jY3Rv
cgBjb25uZXRpb25TdHIAc3RyAFN5c3RlbS5EaWFnbm9zdGljcwBGcm9tU2Vjb25kcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfYjM0ZGFlYmU4MTA1
NDE0MjkyOWJkMWUyZmRhYzJmYWUuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNUX2IzNGRhZWJlODEwNTQxNDI5MjliZDFlMmZkYWMyZmFlLlByb3BlcnRpZXMA
Z2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAFByb2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1
bHRzAHNldF9Bcmd1bWVudHMARm9ybWF0AE9iamVjdABTZWxlY3QAU3BsaXQAV2FpdEZvckV4aXQA
Z2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAU3RhcnQAVG9MaXN0AHNldF9SZWRpcmVjdFN0YW5k
YXJkT3V0cHV0AGdldF9Ob3cAc2V0X0NyZWF0ZU5vV2luZG93AGdldF9Bc3NlbWJseQAAAC1VAHMA
ZQByADoAOgBjAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAjVQBzAGUAcgA6ADoAcgBl
AG0AbwB0AGUARgBpAGwAZQBzAAAfVQBzAGUAcgA6ADoAcgBlAG0AbwB0AGUARABpAHIAABtVAHMA
ZQByADoAOgB0AGkAbQBlAE8AdQB0AABLVwBhAGkAdABpAG4AZwAgAHsAMAB9AC4ALgAuAHUAbgB0
AGkAbAAgAGIAbwB0AGgAIABmAGkAbABlAHMAIABlAHgAaQBzAHQAIQAAH2gAaABcADoAbQBtAFwA
OgBzAHMAXAA6AGYAZgBmAAAjVQBzAGUAcgA6ADoAZQByAHIAbwByAFMAdAByAGkAbgBnAAAVdwBp
AG4AcwBjAHAALgBjAG8AbQAAYS8AYwBvAG0AbQBhAG4AZAAgACIAbwBwAGUAbgAgAHMAZgB0AHAA
OgAvAC8AewAwAH0AIgAgACIAcwB0AGEAdAAgACIAIgB7ADEAfQAiACIAIgAgACIAZQB4AGkAdAAi
AABxUwBUAF8AYgAzADQAZABhAGUAYgBlADgAMQAwADUANAAxADQAMgA5ADIAOQBiAGQAMQBlADIA
ZgBkAGEAYwAyAGYAYQBlAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAATewAwAH0AewAxAH0AewAyAH0AAAMvAAABAAckACQAJAAACWQAZABNAE0AAAAAAKBcWcc7b39K
iQzTT/+j08QABCABAQgDIAABBSABARERBCABAQ4FIAEBEWUOBwUSGAgVEj0BDhFBEkUEIAAScQQg
ABJ1BSABEnkcAyAAHAYgAR0OHQMQEAEBFRKAjQEeABUSPQEeAAMKAQ4HFRKAkQIODgUgAgEcGBgQ
AgIVEj0BHgEVEj0BHgAVEoCRAh4AHgEECgIODgUAARFBDQQgAQ4OBQACDg4cBAABAQ4EAAEBCAcV
EoCRAg4CEhABAgIVEj0BHgAVEoCRAh4AAgMgAA4EIAEBHAYAAw4OHBwEIAEBAgYgAQESgKEDIAAC
AyAACAgAARKApRGAqQUgABKArQcgAgEOEoCtBAcBEVUEIAECDgQAABFVBSACDg4OBwAEDg4cHBwI
t3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSXQMGEmEDBhIQAgYIAwYRFAIGDgUAAgIODgQA
ABJdBAAAEmEFAAEBEmEEAAASEAMAAAEECAASXQQIABJhBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2IzNGRhZWJlODEwNTQxNDI5Mjli
ZDFlMmZkYWMyZmFlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsg
NAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAmDUAAAAAAAAAAAAAsjUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKQ1
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDtQOgYAAABAO1A6Bg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGIAMwA0AGQAYQBlAGIAZQA4ADEAMAA1ADQAMQA0ADIAOQAyADkAYgBkADEAZQAyAGYA
ZABhAGMAMgBmAGEAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMANwA2AC4AMQA2ADYAMgAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGIAMwA0AGQAYQBlAGIAZQA4ADEAMAA1ADQAMQA0ADIAOQAyADkAYgBkADEAZQAyAGYAZABh
AGMAMgBmAGEAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYgAzADQAZABhAGUAYgBlADgAMQAwADUANAAxADQAMgA5ADIAOQBiAGQAMQBl
ADIAZgBkAGEAYwAyAGYAYQBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGIAMwA0AGQAYQBlAGIAZQA4ADEAMAA1ADQAMQA0ADIAOQAyADkAYgBkADEAZQAy
AGYAZABhAGMAMgBmAGEAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAzADcANgAuADEANgA2ADIAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADcANgAuADEANgA2ADIAMQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADENQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Download remote files"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:DTSID="{9FD5ECA2-F556-4D41-90EF-2DC48FDA6E17}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Download remote files"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_768f28a7d81845808ab16e5a1397e8e1"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::connectionString,User::localDir,User::remoteDir,User::remoteFiles"
          ReadWriteVariables="User::downloadEndTime,User::downloadStartTime,User::errorString">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_768f28a7d81845808ab16e5a1397e8e1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_768f28a7d81845808ab16e5a1397e8e1")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Diagnostics;
#endregion

namespace ST_768f28a7d81845808ab16e5a1397e8e1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                String connectionString = (String)Dts.Variables["User::connectionString"].Value;
                String remoteFilesString = (String)Dts.Variables["User::remoteFiles"].Value;
                String remoteDir = (String)Dts.Variables["User::remoteDir"].Value;
                String localDir = (String)Dts.Variables["User::localDir"].Value;

                Dts.Variables["User::downloadStartTime"].Value = (DateTime)DateTime.Now;

                remoteFilesString.Split(',')
                    .ToList()
                    .Select(str => str.Trim()
                                    .Replace("$$$", DateTime.Now.ToString("ddMM")))
                    .ToList()
                    .ForEach(remoteFile => DownloadRemoteFile(connectionString, remoteFile, remoteDir, localDir));

                Dts.Variables["User::downloadEndTime"].Value = (DateTime)DateTime.Now;

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

        static void DownloadRemoteFile(String connetionStr, String remoteFile, String remoteDir, String localDir)
        {
            var proc = new Process
            {
                StartInfo = new ProcessStartInfo
                {
                    FileName = "winscp.com",
                    Arguments = String.Format("/command \"open sftp://{0}\" \"cd \"\"{1}\"\"\" \"get -latest -neweronly \"\"{2}\"\" \"\"{3}\"\"\\\" \"close\" \"exit\"",
                    connetionStr, remoteDir, remoteFile, localDir),
                    UseShellExecute = false,
                    RedirectStandardOutput = true,
                    CreateNoWindow = true
                }
            };

            proc.Start();
            proc.WaitForExit();
        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_768f28a7d81845808ab16e5a1397e8e1</msb:CodeName>
		<msb:DisplayName>ST_768f28a7d81845808ab16e5a1397e8e1</msb:DisplayName>
		<msb:ProjectId>{825638C4-A656-43C8-8C8A-1E04B210A60E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_768f28a7d81845808ab16e5a1397e8e1.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_768f28a7d81845808ab16e5a1397e8e1.Properties.Settings.get_Default():ST_768f28a7d81845808ab16e5a1397e8e1.Properties.Sett" +
    "ings")]

namespace ST_768f28a7d81845808ab16e5a1397e8e1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_768f28a7d81845808ab16e5a1397e8e1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d5b4453d-af56-4fd1-9c35-5e49a698cd69}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_768f28a7d81845808ab16e5a1397e8e1</RootNamespace>
    <AssemblyName>ST_768f28a7d81845808ab16e5a1397e8e1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_768f28a7d81845808ab16e5a1397e8e1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_768f28a7d81845808ab16e5a1397e8e1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_768f28a7d81845808ab16e5a1397e8e1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_768f28a7d81845808ab16e5a1397e8e1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_768f28a7d81845808ab16e5a1397e8e1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_768f28a7d81845808ab16e5a1397e8e1.dll">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
BAALAAMBEAAXAAAAUQAHAAsAAyEQAL0AAABRAAoADQARAMsEBgERAL0BCgERAOQADgEGBqwAEgFW
gIUGFQFWgJ0BFQEGAPcDGQEGAHgFGQEGAIIFGQE2AIAAHAEWAAEAIAFQIAAAAACGAN0EBgABAOQh
AAAAAJEAOAEoAQEAVyIAAAAAhhiLBQYABQBfIgAAAACDGIsFBgAFAGciAAAAAJMIZAUwAQUAkyIA
AAAAkwilATUBBQCaIgAAAACTCLEBOgEFAKIiAAAAAJYI4AZAAQYAqSIAAAAAhhiLBQYABgCxIgAA
AACRGJEFRQEGAF8iAAAAAIYYiwUGAAYAvSIAAAAAgwAsABAABgDXIgAAAACRGJEFRQEHAF8iAAAA
AIYYiwUGAAcA5CIAAAAAgwAKAN8ABwAAAAEAmAUAAAIASwEAAAMAeAUAAAQAggUAAAEA1wMAAAEA
SwEAAAEApQUJAIsFAQARAIsFBgAZAIsFCgApAIsFEAAxAIsFEAA5AIsFEABBAIsFEABJAIsFEABR
AIsFEABZAIsFEABhAIsFEABpAIsFBgCZAIsFBgC5AIsFBgDZAIsFFQBxAJUGIgDpAG4GJwDxALEE
LAD5AMMDMgCxACMHNgD5AM0DOwABAc4GQAARAQEHRwAMAIsFZAARAccGagAUAIsFZAAcABEElwDp
AOwGAQB5APQAogCBAIsFBgCJAIsFBgCJAFYBEAABAbkGrQCJAKsGEACJAK8DtACJAAgHtACJACsH
tACBADQFuQCBAPsGvwCBANQGBgBxAIsFBgChAIsFBgAxASYBwwAxAT4HzADBAIsF0gDhAIsFBgAB
AcEEogCxAAgE3wABAdwA5AAIABQA/AAIABgAAQEpAHsAgAEuAAsAWAEuABMAYQEuABsAgAEuACMA
iQEuACsAsgEuADMAsgEuADsAsgEuAEMAiQEuAEsAuAEuAFMAsgEuAFsAzwFDAGMAAQFJAHsAgAFh
AGsAAQFjAHMAAQHDAGsAAQHjAGsAAQEbAKYA2gADAAEABAADAAAAaAVJAQAAxQFOAQAA5AZTAQIA
BQADAAIABgAFAAEABwAFAAIACAAHAF0AiQCQAASAAAABAAAA7xhwQAAAAAAAAFUAAAAEAAAAAAAA
AAAAAADqALQAAAAAAAsAAAAAAAAAAAAAAPMAGQQAAAAABAAAAAAAAAAAAAAA6gC6BAAAAAALAAAA
AAAAAAAAAADzAI0AAAAAAAQAAAAAAAAAAAAAAOoAkQEAAAAAAAAAAAEAAADtBQAABQACAAYAAgAH
AAIALwBZADMAhAAAAAAAADw+OV9fMF8wADxNYWluPmJfXzBfMAA8PmNfX0Rpc3BsYXlDbGFzczBf
MAA8TWFpbj5iX18xAElFbnVtZXJhYmxlYDEAQWN0aW9uYDEATGlzdGAxAFNUXzc2OGYyOGE3ZDgx
ODQ1ODA4YWIxNmU1YTEzOTdlOGUxAEZ1bmNgMgA8PjkAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNl
cnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFZhcmlhYmxlAEVudW1l
cmFibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARG93bmxvYWRSZW1vdGVG
aWxlAHJlbW90ZUZpbGUAc2V0X0ZpbGVOYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlJ1bnRpbWUAVHlwZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRy
aWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVk
aXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJl
bGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVs
bEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAGNvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcARm9yRWFjaABNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfNzY4ZjI4YTdkODE4NDU4MDhh
YjE2ZTVhMTM5N2U4ZTEuZGxsAGdldF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3VyY2VNYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8Ac2V0X1N0YXJ0SW5mbwBQcm9jZXNz
U3RhcnRJbmZvAFN5c3RlbS5MaW5xAENoYXIAZ2V0X1Jlc291cmNlTWFuYWdlcgByZW1vdGVEaXIA
bG9jYWxEaXIALmN0b3IALmNjdG9yAGNvbm5ldGlvblN0cgBzdHIAU3lzdGVtLkRpYWdub3N0aWNz
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF83Njhm
MjhhN2Q4MTg0NTgwOGFiMTZlNWExMzk3ZThlMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJj
ZXMARGVidWdnaW5nTW9kZXMAU1RfNzY4ZjI4YTdkODE4NDU4MDhhYjE2ZTVhMTM5N2U4ZTEuUHJv
cGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAUHJvY2VzcwBnZXRfRHRzAFNj
cmlwdFJlc3VsdHMAc2V0X0FyZ3VtZW50cwBGb3JtYXQAT2JqZWN0AFNlbGVjdABTcGxpdABXYWl0
Rm9yRXhpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTdGFydABUb0xpc3QAc2V0X1JlZGly
ZWN0U3RhbmRhcmRPdXRwdXQAZ2V0X05vdwBzZXRfQ3JlYXRlTm9XaW5kb3cAZ2V0X0Fzc2VtYmx5
AAAALVUAcwBlAHIAOgA6AGMAbwBuAG4AZQBjAHQAaQBvAG4AUwB0AHIAaQBuAGcAACNVAHMAZQBy
ADoAOgByAGUAbQBvAHQAZQBGAGkAbABlAHMAAB9VAHMAZQByADoAOgByAGUAbQBvAHQAZQBEAGkA
cgAAHVUAcwBlAHIAOgA6AGwAbwBjAGEAbABEAGkAcgAAL1UAcwBlAHIAOgA6AGQAbwB3AG4AbABv
AGEAZABTAHQAYQByAHQAVABpAG0AZQAAK1UAcwBlAHIAOgA6AGQAbwB3AG4AbABvAGEAZABFAG4A
ZABUAGkAbQBlAAAjVQBzAGUAcgA6ADoAZQByAHIAbwByAFMAdAByAGkAbgBnAAAVdwBpAG4AcwBj
AHAALgBjAG8AbQAAgMEvAGMAbwBtAG0AYQBuAGQAIAAiAG8AcABlAG4AIABzAGYAdABwADoALwAv
AHsAMAB9ACIAIAAiAGMAZAAgACIAIgB7ADEAfQAiACIAIgAgACIAZwBlAHQAIAAtAGwAYQB0AGUA
cwB0ACAALQBuAGUAdwBlAHIAbwBuAGwAeQAgACIAIgB7ADIAfQAiACIAIAAiACIAewAzAH0AIgAi
AFwAIgAgACIAYwBsAG8AcwBlACIAIAAiAGUAeABpAHQAIgABcVMAVABfADcANgA4AGYAMgA4AGEA
NwBkADgAMQA4ADQANQA4ADAAOABhAGIAMQA2AGUANQBhADEAMwA5ADcAZQA4AGUAMQAuAFAAcgBv
AHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAByQAJAAkAAAJZABkAE0ATQAAAACZ
+pI3BsfTRppkeO4IU3uwAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFpBgcCEhgSPQQgABJ1BCAA
EnkFIAESfRwDIAAcBAAAEVkEIAEBHAYgAR0OHQMREAEBFRKAjQEeABUSgJEBHgADCgEOBhUSVQIO
DgUgAgEcGBkQAgIVEoCRAR4BFRKAkQEeABUSVQIeAB4BBAoCDg4GFRKAlQEOBhUSgI0BDgogAQEV
EoCVARMAAyAADgYHAhJBEkUGAAIODh0cBCABAQIFIAEBEkUDIAACCAABEoCZEYCdBSAAEoChByAC
AQ4SgKEEBwERWQQgAQ4OBSACDg4OCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEmEDBhJl
AwYSEAIGCAMGERQCBg4DBhIcBwYVElUCDg4HAAQBDg4ODgQAABJhBAAAEmUFAAEBEmUEAAASEAMA
AAEECAASYQQIABJlBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUXzc2OGYyOGE3ZDgxODQ1ODA4YWIxNmU1YTEzOTdlOGUxAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAvDUAAAAA
AAAAAAAA1jUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMg1AAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBwQO8YAAABAHBA7xg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADcANgA4AGYAMgA4AGEANwBkADgAMQA4ADQANQA4ADAAOABhAGIAMQA2AGUANQBhADEA
MwA5ADcAZQA4AGUAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMAOAAzAC4AMQA2ADQAOQA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADcANgA4AGYAMgA4AGEANwBkADgAMQA4ADQANQA4ADAAOABhAGIAMQA2AGUANQBhADEAMwA5
ADcAZQA4AGUAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANwA2ADgAZgAyADgAYQA3AGQAOAAxADgANAA1ADgAMAA4AGEAYgAxADYAZQA1
AGEAMQAzADkANwBlADgAZQAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADcANgA4AGYAMgA4AGEANwBkADgAMQA4ADQANQA4ADAAOABhAGIAMQA2AGUANQBh
ADEAMwA5ADcAZQA4AGUAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAzADgAMwAuADEANgA0ADkANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADgAMwAuADEANgA0ADkANgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADoNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\End time for update MASTER_SERVICIO"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea de expresión"
      DTS:DTSID="{8745C0C7-99A6-41C8-8221-12F8550BE3DF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="End time for update MASTER_SERVICIO"
      DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::SqlQuery2EndTime] =  GETDATE()" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\End time for update TRAN_DEUDA, start time update MASTER_SERVICIO"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea de expresión"
      DTS:DTSID="{C6AE66D3-731F-46A7-B979-1DAF5F567B54}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="End time for update TRAN_DEUDA, start time update MASTER_SERVICIO"
      DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::SqlQuery1EndTime] =  GETDATE()" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Error log"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:DTSID="{717B24ED-3AE4-4DE6-B564-CF9C2012A59B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Error log"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f8266c7964ad481e969a2a715b608d89"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::errorString">
          <ProjectItem
            Name="ST_f8266c7964ad481e969a2a715b608d89.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7140a341-140d-45c8-9ac9-f7698d562b04}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_f8266c7964ad481e969a2a715b608d89</RootNamespace>
    <AssemblyName>ST_f8266c7964ad481e969a2a715b608d89</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f8266c7964ad481e969a2a715b608d89.Properties.Settings.get_Default():ST_f8266c7964ad481e969a2a715b608d89.Properties.Sett" +
    "ings")]

namespace ST_f8266c7964ad481e969a2a715b608d89.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_f8266c7964ad481e969a2a715b608d89
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                using (StreamWriter sw = File.AppendText(@"C:\SSIS_Configuration\LoadDataDailyPackage.log"))
                {
                    sw.WriteLine(String.Format("{0} Error: {1}", DateTime.Now.ToString(@"hh\:mm\:ss\:fff"), Dts.Variables["User::errorString"].Value));
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_f8266c7964ad481e969a2a715b608d89</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_f8266c7964ad481e969a2a715b608d89</msb:DisplayName>
		<msb:ProjectId>{B18AEBD7-30A7-4562-B949-CC37E7DC0F10}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f8266c7964ad481e969a2a715b608d89.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_f8266c7964ad481e969a2a715b608d89")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_f8266c7964ad481e969a2a715b608d89")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f8266c7964ad481e969a2a715b608d89.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f8266c7964ad481e969a2a715b608d89.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_f8266c7964ad481e969a2a715b608d89.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_f8266c7964ad481e969a2a715b608d89.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_f8266c7964ad481e969a2a715b608d89.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f8266c7964ad481e969a2a715b608d89.dll">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
AwAAAFUErAAAABYBsQAAAJYFtgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAOcYyJUA
AAAAAAABAAAABAAAAAAAAAAAAAAAZABfAAAAAAALAAAAAAAAAAAAAABtADsDAAAAAAQAAAAAAAAA
AAAAAGQA3AMAAAAACwAAAAAAAAAAAAAAbQA4AAAAAAAAAAAAAQAAAM4EAAAFAAIAAAAAU1RfZjgy
NjZjNzk2NGFkNDgxZTk2OWEyYTcxNWI2MDhkODkAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBW
YXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBG
aWxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAV3JpdGVMaW5lAFR5
cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJU
U2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1
bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTVF9mODI2NmM3OTY0YWQ0ODFlOTY5YTJhNzE1YjYwOGQ4OS5k
bGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRp
b24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9mODI2NmM3OTY0YWQ0ODFlOTY5YTJhNzE1YjYw
OGQ4OS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZjgy
NjZjNzk2NGFkNDgxZTk2OWEyYTcxNWI2MDhkODkuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNl
dHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEZvcm1hdABPYmplY3QAZ2V0X0Rl
ZmF1bHQAc2V0X1Rhc2tSZXN1bHQAQXBwZW5kVGV4dABnZXRfTm93AGdldF9Bc3NlbWJseQAAAAAA
XUMAOgBcAFMAUwBJAFMAXwBDAG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAFwATABvAGEAZABEAGEA
dABhAEQAYQBpAGwAeQBQAGEAYwBrAGEAZwBlAC4AbABvAGcAAB17ADAAfQAgAEUAcgByAG8AcgA6
ACAAewAxAH0AAB9oAGgAXAA6AG0AbQBcADoAcwBzAFwAOgBmAGYAZgAAI1UAcwBlAHIAOgA6AGUA
cgByAG8AcgBTAHQAcgBpAG4AZwAAcVMAVABfAGYAOAAyADYANgBjADcAOQA2ADQAYQBkADQAOAAx
AGUAOQA2ADkAYQAyAGEANwAxADUAYgA2ADAAOABkADgAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAC0wZDMaLYxDlE7SzseZ3swABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEV0GBwISPRFBBQABEj0OBAAAEUEEIAEODgQgABJxBCAAEnUFIAESeRwDIAAcBgADDg4c
HAgAARKAiRGAjQUgABKAkQcgAgEOEoCRCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElUD
BhJZAwYSEAIGCAMGERQEAAASVQQAABJZBQABARJZBAAAEhADAAABBAgAElUECAASWQQIABIQCAEA
CAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9mODI2
NmM3OTY0YWQ0ODFlOTY5YTJhNzE1YjYwOGQ4OQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3
AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1l
EC5ORVQgRnJhbWV3b3JrIDQAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA0LwAAAAAAAAAAAABOLwAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAQC8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQDIlecYAAABAMiV5xg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGYAOAAyADYANgBjADcAOQA2ADQAYQBkADQAOAAxAGUAOQA2ADkAYQAyAGEANwAx
ADUAYgA2ADAAOABkADgAOQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA2ADMANwA1AC4AMwA4ADMANAA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGYAOAAyADYANgBjADcAOQA2ADQAYQBkADQAOAAxAGUAOQA2ADkAYQAyAGEANwAxADUA
YgA2ADAAOABkADgAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZgA4ADIANgA2AGMANwA5ADYANABhAGQANAA4ADEAZQA5ADYAOQBhADIA
YQA3ADEANQBiADYAMAA4AGQAOAA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGYAOAAyADYANgBjADcAOQA2ADQAYQBkADQAOAAxAGUAOQA2ADkAYQAyAGEA
NwAxADUAYgA2ADAAOABkADgAOQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4ANgAzADcANQAuADMAOAAzADQANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADcANQAuADMAOAAzADQANAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAABgPwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Update MASTER_SERVICIO"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{F67A8345-1523-4AC0-8F8A-930D38C46E9F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Update MASTER_SERVICIO"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5F46BF68-BA82-4A99-8018-AB1FF26B1FB3}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="LUNA ACTUALIZAR ESTADO TELEFONO.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Update TRAN_DEUDA"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{21C6AAC7-3390-4761-9F13-1CAD67FBAF8A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Update TRAN_DEUDA"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{5F46BF68-BA82-4A99-8018-AB1FF26B1FB3}"
          SQLTask:SqlStmtSourceType="FileConnection"
          SQLTask:SqlStatementSource="ACTUALIZAR TRAN_DEUDA.sql" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load configuration"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:DTSID="{58E713B9-A73A-4EC4-AEC7-CFDFE80613F0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load configuration"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_54273624734c42cd86ba00117b51e9cc"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::connectionString,User::emailFrom,User::emailFromPassword,User::emailsBcc,User::emailsCc,User::emailsTo,User::errorString,User::excelFilePath,User::localDir,User::remoteDir,User::remoteFiles,User::reportOutputDir,User::reportRemoteOutputDir,User::sendExcelFile,User::sqlConnectionString,User::sqlPassword,User::sqlUser,User::timeOut">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_54273624734c42cd86ba00117b51e9cc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_54273624734c42cd86ba00117b51e9cc")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Linq;
#endregion

namespace ST_54273624734c42cd86ba00117b51e9cc
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        public void Main()
        {
            try
            {
                var jsonString = File.ReadAllText(@"C:\SSIS_Configuration\configuration.json");
                var configuration = new System.Web.Script.Serialization.JavaScriptSerializer().Deserialize<Configuration>(jsonString);

                Dts.Variables["User::connectionString"].Value = configuration.connectionString;
                Dts.Variables["User::emailFrom"].Value = configuration.emailFrom;
                Dts.Variables["User::emailFromPassword"].Value = configuration.emailFromPassword;
                Dts.Variables["User::emailsBcc"].Value = configuration.emailsBcc;
                Dts.Variables["User::emailsTo"].Value = configuration.emailsTo;
                Dts.Variables["User::emailsCc"].Value = configuration.emailsCc;
                Dts.Variables["User::excelFilePath"].Value = configuration.excelFilePath;
                Dts.Variables["User::localDir"].Value = configuration.localDir;
                Dts.Variables["User::remoteDir"].Value = configuration.remoteDir;
                Dts.Variables["User::remoteFiles"].Value = configuration.remoteFiles;
                Dts.Variables["User::timeOut"].Value = Convert.ToInt32(configuration.timeOut);
                Dts.Variables["User::sendExcelFile"].Value = Convert.ToBoolean(configuration.sendExcelFile);
                Dts.Variables["User::sqlConnectionString"].Value = configuration.sqlConnectionString;
                Dts.Variables["User::sqlPassword"].Value = configuration.sqlPassword;
                Dts.Variables["User::sqlUser"].Value = configuration.sqlUser;
                Dts.Variables["User::reportRemoteOutputDir"].Value = configuration.reportRemoteOutputDir;
                Dts.Variables["User::reportOutputDir"].Value = configuration.reportOutputDir;

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        public class Configuration
        {
            public string connectionString { get; set; }
            public string emailFrom { get; set; }
            public string emailFromPassword { get; set; }
            public string emailsBcc { get; set; }
            public string emailsTo { get; set; }
            public string emailsCc { get; set; }
            public string excelFilePath { get; set; }
            public string sendExcelFile { get; set; }
            public string localDir { get; set; }
            public string remoteDir { get; set; }
            public string remoteFiles { get; set; }
            public Int32 timeOut { get; set; }
            public string sqlConnectionString { get; set; }
            public string sqlPassword { get; set; }
            public string sqlUser { get; set; }
            public string reportOutputDir { get; set; }
            public string reportRemoteOutputDir { get; set; }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_54273624734c42cd86ba00117b51e9cc</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_54273624734c42cd86ba00117b51e9cc</msb:DisplayName>
		<msb:ProjectId>{1C62C92E-27E9-4289-B587-CD353C449A7C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_54273624734c42cd86ba00117b51e9cc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="packages.config"/>
		<msb:File Include="ScriptMain.cs"/>
		<msb:Folder Include="Service References\"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="10.0.2" targetFramework="net45" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_54273624734c42cd86ba00117b51e9cc.Properties.Settings.get_Default():ST_54273624734c42cd86ba00117b51e9cc.Properties.Sett" +
    "ings")]

namespace ST_54273624734c42cd86ba00117b51e9cc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_54273624734c42cd86ba00117b51e9cc.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0DCF694B-2FA9-46D3-924A-163275B52672}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_54273624734c42cd86ba00117b51e9cc</RootNamespace>
    <AssemblyName>ST_54273624734c42cd86ba00117b51e9cc</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_54273624734c42cd86ba00117b51e9cc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_54273624734c42cd86ba00117b51e9cc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_54273624734c42cd86ba00117b51e9cc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_54273624734c42cd86ba00117b51e9cc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_54273624734c42cd86ba00117b51e9cc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_54273624734c42cd86ba00117b51e9cc.dll">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
bglTAAwAHCQAAAAAhgh+CRAADAAlJAAAAACGCPUJwgANAC0kAAAAAIYIAQoBAA0ANiQAAAAAhgjH
BVMADgA+JAAAAACGCN8FEAAOAEckAAAAAIYIoQJTAA8ATyQAAAAAhgixAhAADwBYJAAAAACGCM8H
UwAQAGAkAAAAAIYI2wcQABAAaSQAAAAAhghmCFMAEQBxJAAAAACGCHoIEAARAHokAAAAAIYIMghT
ABIAgiQAAAAAhghMCBAAEgAMIwAAAACGGI4IBgATAAAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAA
AQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCb
BQAAAQCbBQAAAQCbBQAAAQCbBQAAAQCbBQkAjggBABEAjggGABkAjggKACkAjggQADEAjggQADkA
jggQAEEAjggQAEkAjggQAFEAjggQAFkAjggQAGEAjggQAGkAjggGAIkAjggGAJkAjggGALkAjggV
AMkADQojANEAjggGANEAoQUoAHEAtQk0ANkAYAk5AOEA3QY+AOkAkQVEAPEAAQBJAPEAGgdOANkA
3gkBAHkA/QJTAHEAjggGAIEAjggGAAkBJANXAAkBGQpgAKEAjghmAMEAjggGAAgAWACJAAgAXACO
ACkAewAFAS4ACwDdAC4AEwDmAC4AGwAFAS4AIwAOAS4AKwA3AS4AMwA3AS4AOwA3AS4AQwAOAS4A
SwA9AS4AUwA3AS4AWwBUAUMAYwCOAEkAewAFAWEAawCOAGMAcwCOAIEAawCOAKEAawCOAMEAawCO
AOEAawCOAAEBawCOACEBawCOAEABawCOAEEBawCOAGABawCOAGEBawCOAIABawCOAIEBawCOAKAB
awCOAKEBawCOAMABawCOAMEBawCOAOABawCOAOEBawCOAAACawCOAAECawCOACACawCOACECawCO
AEACawCOAEECawCOAGACawCOAGECawCOAIACawCOAIECawCOAKACawCOAMACawCOAOACawCOAAAD
awCOACADawCOAEADawCOAGADawCOAIADawCOAKADawCOAMADawCOAOADawCOAAAEawCOACAEawCO
AEAEawCOAGAEawCOAIAEawCOAKAEawCOAMAEawCOAOAEawCOAAAFawCOACAFawCOAEAFawCOAGAF
awCOABsAAwABAAQAAwAFAAQAAAC/B8YAAACnA8sAAADWCdAAAAAQBtUAAAD/BtUAAADbAtUAAACc
ANUAAACmB9UAAABdANUAAAA3BtUAAABMA9UAAAApCNUAAAAOCNUAAACCCdUAAAAFCtkAAADjBdUA
AAC1AtUAAADfB9UAAAB+CNUAAABQCNUAAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAAgAKAAkAAQAL
AAkAAgAMAAsAAQANAAsAAgAOAA0AAQAPAA0AAgAQAA8AAQARAA8AAgASABEAAQATABEAAgAUABMA
AQAVABMAAgAWABUAAQAXABUAAgAYABcAAQAZABcAAgAaABkAAQAbABkAAgAcABsAAQAdABsAAgAe
AB0AAQAfAB0AAgAgAB8AAQAhAB8AAgAiACEAAQAjACEAAgAkACMAAQAlACMAAgAmACUAAQAnACUA
AgAoACcAAQApACcAAgAqACkAAQArACkABIAAAAEAAADvGKtOAAAAAAAAZgAAAAQAAAAAAAAAAAAA
AG4AQwAAAAAACwAAAAAAAAAAAAAAdwBFBgAAAAAEAAAAAAAAAAAAAABuAOYGAAAAAAQAAAAAAAAA
AAAAAIAAlwkAAAAACwAAAAAAAAAAAAAAdwAcAAAAAAAAAAAAAQAAAN8IAAAFAAIABgACACUALwAA
AAAAAFRvSW50MzIAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdl
ZERUUwB2YWx1ZV9fAG1zY29ybGliAGdldF9lbWFpbHNDYwBzZXRfZW1haWxzQ2MAU1RfNTQyNzM2
MjQ3MzRjNDJjZDg2YmEwMDExN2I1MWU5Y2MAZ2V0X2VtYWlsc0JjYwBzZXRfZW1haWxzQmNjADxl
bWFpbHNDYz5rX19CYWNraW5nRmllbGQAPGVtYWlsc0JjYz5rX19CYWNraW5nRmllbGQAPHNxbFBh
c3N3b3JkPmtfX0JhY2tpbmdGaWVsZAA8ZW1haWxGcm9tUGFzc3dvcmQ+a19fQmFja2luZ0ZpZWxk
ADxzZW5kRXhjZWxGaWxlPmtfX0JhY2tpbmdGaWVsZAA8c3FsQ29ubmVjdGlvblN0cmluZz5rX19C
YWNraW5nRmllbGQAPGNvbm5lY3Rpb25TdHJpbmc+a19fQmFja2luZ0ZpZWxkADxleGNlbEZpbGVQ
YXRoPmtfX0JhY2tpbmdGaWVsZAA8ZW1haWxGcm9tPmtfX0JhY2tpbmdGaWVsZAA8ZW1haWxzVG8+
a19fQmFja2luZ0ZpZWxkADxzcWxVc2VyPmtfX0JhY2tpbmdGaWVsZAA8cmVtb3RlRGlyPmtfX0Jh
Y2tpbmdGaWVsZAA8bG9jYWxEaXI+a19fQmFja2luZ0ZpZWxkADxyZXBvcnRSZW1vdGVPdXRwdXRE
aXI+a19fQmFja2luZ0ZpZWxkADxyZXBvcnRPdXRwdXREaXI+a19fQmFja2luZ0ZpZWxkADxyZW1v
dGVGaWxlcz5rX19CYWNraW5nRmllbGQAPHRpbWVPdXQ+a19fQmFja2luZ0ZpZWxkAGdldF9zcWxQ
YXNzd29yZABzZXRfc3FsUGFzc3dvcmQAZ2V0X2VtYWlsRnJvbVBhc3N3b3JkAHNldF9lbWFpbEZy
b21QYXNzd29yZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3NlbmRFeGNlbEZpbGUAc2V0X3NlbmRFeGNl
bEZpbGUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1
bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVs
QmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJp
YnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1
dGUAc2V0X1ZhbHVlAHZhbHVlAERlc2VyaWFsaXplAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
Z2V0X3NxbENvbm5lY3Rpb25TdHJpbmcAc2V0X3NxbENvbm5lY3Rpb25TdHJpbmcAZ2V0X2Nvbm5l
Y3Rpb25TdHJpbmcAc2V0X2Nvbm5lY3Rpb25TdHJpbmcAZ2V0X2V4Y2VsRmlsZVBhdGgAc2V0X2V4
Y2VsRmlsZVBhdGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAFNUXzU0MjczNjI0NzM0YzQyY2Q4NmJhMDAxMTdiNTFlOWNjLmRsbABnZXRfSXRl
bQBTeXN0ZW0AZ2V0X2VtYWlsRnJvbQBzZXRfZW1haWxGcm9tAEVudW0AcmVzb3VyY2VNYW4AVG9C
b29sZWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRp
b24AU3lzdGVtLldlYi5TY3JpcHQuU2VyaWFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNl
cHRpb24AZ2V0X2VtYWlsc1RvAHNldF9lbWFpbHNUbwBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VN
YW5hZ2VyAGdldF9zcWxVc2VyAHNldF9zcWxVc2VyAEphdmFTY3JpcHRTZXJpYWxpemVyAGdldF9y
ZW1vdGVEaXIAc2V0X3JlbW90ZURpcgBnZXRfbG9jYWxEaXIAc2V0X2xvY2FsRGlyAGdldF9yZXBv
cnRSZW1vdGVPdXRwdXREaXIAc2V0X3JlcG9ydFJlbW90ZU91dHB1dERpcgBnZXRfcmVwb3J0T3V0
cHV0RGlyAHNldF9yZXBvcnRPdXRwdXREaXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGlj
cwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfNTQy
NzM2MjQ3MzRjNDJjZDg2YmEwMDExN2I1MWU5Y2MuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAERlYnVnZ2luZ01vZGVzAFNUXzU0MjczNjI0NzM0YzQyY2Q4NmJhMDAxMTdiNTFlOWNjLlBy
b3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBnZXRfcmVtb3RlRmlsZXMAc2V0X3JlbW90ZUZpbGVzAFNl
dHRpbmdzAFN5c3RlbS5XZWIuRXh0ZW5zaW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0
cwBPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAQ29udmVydABnZXRfdGltZU91dABz
ZXRfdGltZU91dABSZWFkQWxsVGV4dABnZXRfQXNzZW1ibHkAAAAAUUMAOgBcAFMAUwBJAFMAXwBD
AG8AbgBmAGkAZwB1AHIAYQB0AGkAbwBuAFwAYwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgAuAGoA
cwBvAG4AAC1VAHMAZQByADoAOgBjAG8AbgBuAGUAYwB0AGkAbwBuAFMAdAByAGkAbgBnAAAfVQBz
AGUAcgA6ADoAZQBtAGEAaQBsAEYAcgBvAG0AAC9VAHMAZQByADoAOgBlAG0AYQBpAGwARgByAG8A
bQBQAGEAcwBzAHcAbwByAGQAAB9VAHMAZQByADoAOgBlAG0AYQBpAGwAcwBCAGMAYwAAHVUAcwBl
AHIAOgA6AGUAbQBhAGkAbABzAFQAbwAAHVUAcwBlAHIAOgA6AGUAbQBhAGkAbABzAEMAYwAAJ1UA
cwBlAHIAOgA6AGUAeABjAGUAbABGAGkAbABlAFAAYQB0AGgAAB1VAHMAZQByADoAOgBsAG8AYwBh
AGwARABpAHIAAB9VAHMAZQByADoAOgByAGUAbQBvAHQAZQBEAGkAcgAAI1UAcwBlAHIAOgA6AHIA
ZQBtAG8AdABlAEYAaQBsAGUAcwAAG1UAcwBlAHIAOgA6AHQAaQBtAGUATwB1AHQAACdVAHMAZQBy
ADoAOgBzAGUAbgBkAEUAeABjAGUAbABGAGkAbABlAAAzVQBzAGUAcgA6ADoAcwBxAGwAQwBvAG4A
bgBlAGMAdABpAG8AbgBTAHQAcgBpAG4AZwAAI1UAcwBlAHIAOgA6AHMAcQBsAFAAYQBzAHMAdwBv
AHIAZAAAG1UAcwBlAHIAOgA6AHMAcQBsAFUAcwBlAHIAADdVAHMAZQByADoAOgByAGUAcABvAHIA
dABSAGUAbQBvAHQAZQBPAHUAdABwAHUAdABEAGkAcgAAK1UAcwBlAHIAOgA6AHIAZQBwAG8AcgB0
AE8AdQB0AHAAdQB0AEQAaQByAAAjVQBzAGUAcgA6ADoAZQByAHIAbwByAFMAdAByAGkAbgBnAABx
UwBUAF8ANQA0ADIANwAzADYAMgA0ADcAMwA0AGMANAAyAGMAZAA4ADYAYgBhADAAMAAxADEANwBi
ADUAMQBlADkAYwBjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AACUmZF05NitSL2laZ6wB548AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZBwcDDhIUEj0EAAEO
DgYwAQEeAA4ECgESFAQgABJtBCAAEnEFIAESdRwEIAEBHAQAAQgIBAABAg4DIAAOCAABEoCFEYCJ
BSAAEoCNByACAQ4SgI0It3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUEAAAAAAQBAAAAAwYSUQMG
ElUDBhIQAgYOAgYIAwYRGAQAABJRBAAAElUFAAEBElUEAAASEAMAAAEDIAAIBAgAElEECAASVQQI
ABIQAygADgMoAAgIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAA
AAAAKAEAI1NUXzU0MjczNjI0NzM0YzQyY2Q4NmJhMDAxMTdiNTFlOWNjAAAFAQAAAAAWAQARQ29w
eXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNLQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABkPgAAAAAAAAAAAAB+
PgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcD4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAq07vGAAAAQCrTu8YPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA1ADQAMgA3ADMANgAyADQANwAzADQAYwA0ADIAYwBkADgANgBiAGEAMAAwADEAMQA3AGIANQAx
AGUAOQBjAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAzADgA
MwAuADIAMAAxADMAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA1
ADQAMgA3ADMANgAyADQANwAzADQAYwA0ADIAYwBkADgANgBiAGEAMAAwADEAMQA3AGIANQAxAGUA
OQBjAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfADUANAAyADcAMwA2ADIANAA3ADMANABjADQAMgBjAGQAOAA2AGIAYQAwADAAMQAxADcA
YgA1ADEAZQA5AGMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwA1ADQAMgA3ADMANgAyADQANwAzADQAYwA0ADIAYwBkADgANgBiAGEAMAAwADEAMQA3AGIA
NQAxAGUAOQBjAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADYAMwA4ADMALgAyADAAMQAzADkAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADYAMwA4ADMALgAyADAAMQAzADkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAkD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send excel email"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:Disabled="True"
      DTS:DTSID="{6754E8F4-D211-437C-973E-B9C0101F2988}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send excel email"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_e9bae8d40e5e4091a455fde6ae19052b"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::emailFrom,User::emailFromPassword,User::emailsBcc,User::emailsCc,User::emailsTo,User::excelFilePath,User::sendExcelFile"
          ReadWriteVariables="User::errorString">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9bae8d40e5e4091a455fde6ae19052b.Properties.Settings.get_Default():ST_e9bae8d40e5e4091a455fde6ae19052b.Properties.Sett" +
    "ings")]

namespace ST_e9bae8d40e5e4091a455fde6ae19052b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Linq;
#endregion

namespace ST_e9bae8d40e5e4091a455fde6ae19052b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                if (Convert.ToBoolean(Dts.Variables["User::sendExcelFile"].Value.ToString()))
                {
                    MailMessage msg = new MailMessage();

                    String emailFrom = (String)Dts.Variables["User::emailFrom"].Value;
                    String password = (String)Dts.Variables["User::emailFromPassword"].Value;
                    String emailsToString = (String)Dts.Variables["User::emailsTo"].Value;
                    String emailsBccString = (String)Dts.Variables["User::emailsBcc"].Value;
                    String emailsCcString = (String)Dts.Variables["User::emailsCc"].Value;
                    String excelFilePath = (String)Dts.Variables["User::excelFilePath"].Value;

                    emailsToString
                        .Split(',')
                        .ToList()
                        .Select(email => email.Trim())
                        .Where(email => !String.IsNullOrEmpty(email))
                        .ToList()
                        .ForEach(email => msg.To.Add(email));

                    emailsBccString
                        .Split(',')
                        .ToList()
                        .Select(email => email.Trim())
                        .Where(email => !String.IsNullOrEmpty(email))
                        .ToList()
                        .ForEach(email => msg.Bcc.Add(email));

                    emailsCcString
                        .Split(',')
                        .ToList()
                        .Select(email => email.Trim())
                        .Where(email => !String.IsNullOrEmpty(email))
                        .ToList()
                        .ForEach(email => msg.CC.Add(email));

                    msg.From = new MailAddress(emailFrom, "RJAbogados - Reporte Automático");
                    msg.Subject = String.Format("RESUMEN DE SALDOS AL {0}.{1}", DateTime.Now.Day, DateTime.Now.ToString("MM"));
                    msg.Body = "Buenos días:<br><br>Adjunto lo indicado.<br><br><br>Un saludo cordial,<br>Rigoberto.<br>";
                    msg.IsBodyHtml = true;
                    msg.Attachments.Add(new Attachment(excelFilePath));

                    SmtpClient client = new SmtpClient();
                    client.Host = "smtp.office365.com";
                    client.Credentials = new System.Net.NetworkCredential(emailFrom, password);
                    client.Port = 587;
                    client.EnableSsl = true;

                    client.Send(msg);
                }


                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9bae8d40e5e4091a455fde6ae19052b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9bae8d40e5e4091a455fde6ae19052b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e9bae8d40e5e4091a455fde6ae19052b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e9bae8d40e5e4091a455fde6ae19052b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e9bae8d40e5e4091a455fde6ae19052b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_e9bae8d40e5e4091a455fde6ae19052b</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_e9bae8d40e5e4091a455fde6ae19052b</msb:DisplayName>
		<msb:ProjectId>{4A90D94C-AC3C-4B27-AEC0-FCBB23A2DFEF}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_e9bae8d40e5e4091a455fde6ae19052b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e9bae8d40e5e4091a455fde6ae19052b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e9bae8d40e5e4091a455fde6ae19052b")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_e9bae8d40e5e4091a455fde6ae19052b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{82e40fc2-3e0f-4ebd-8278-26066d65dedc}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e9bae8d40e5e4091a455fde6ae19052b</RootNamespace>
    <AssemblyName>ST_e9bae8d40e5e4091a455fde6ae19052b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <BinaryItem
            Name="ST_e9bae8d40e5e4091a455fde6ae19052b.dll">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
bwYGABkAbwYKACkAbwYQADEAbwYQADkAbwYQAEEAbwYQAEkAbwYQAFEAbwYQAFkAbwYQAGEAbwYQ
AGkAbwYGAJEAbwYGALEAbwYGANEAbwYVAHEAfAcpAOEAQQcuAOkAggUzAPEAPQQ5AJkAcQQ9APkA
sQVBAKEAbwYGAAEBzgdGABEBFghNAAwAbwZqABEBvAdwABQAbwZqABEBGQKWABwAbwZqACQAfgS9
ADEBbwbIAKEAlwXOAHkAOQjVAHkAQQjaAHkAcQTeAAEBogfjAKEAsAcQAKEASQgQAKEAZQXqAKEA
kgfvAEkBbwYQACwAggH+AFkBbwYGAFkBHQgQAGEBbwbIAFkBWAcEAVkBDQgBAFkBdAXqAFkBhgEL
AeEA4AcBAIEAmwE9APEARwQRAXEAbwYGAJkAbwYGAHEB2QEWAXEBUggfAbkAbwYlAdkAbwYGAKEA
NwYtAYkBggEQAKEAXwEtAaEAAAEtAQEBkgU9AAEBXwhBAAgAFABFAQgAGABKASkAewDPAS4ACwCn
AS4AEwCwAS4AGwDPAS4AIwDYAS4AKwABAi4AMwABAi4AOwABAi4AQwDYAS4ASwAHAi4AUwABAi4A
WwAeAkMAYwBKAUkAewDPAWEAawBKAWMAcwBKAcMAawBKAeMAawBKARsAAwABAAQAAwAAAF8GmAEA
AFMCnQEAANgHogECAAQAAwACAAUABQABAAYABQACAAcABwBjAI8ArwC2APUABIAAAAEAAADnGMmV
AAAAAAAALgEAAAQAAAAAAAAAAAAAADMBUgEAAAAACwAAAAAAAAAAAAAAPAGGBAAAAAAEAAAAAAAA
AAAAAAAzAYsFAAAAAAsAAAAAAAAAAAAAADwBBwEAAAAABAAAAAAAAAAAAAAAMwEfAgAAAAAAAAAA
AQAAAMAGAAAFAAIABgACAAcAAgAxAF8ANQCKADkAXwAAAAAAADw+OV9fMF8wADxNYWluPmJfXzBf
MAA8PmNfX0Rpc3BsYXlDbGFzczBfMAA8PjlfXzBfMQA8TWFpbj5iX18wXzEASUVudW1lcmFibGVg
MQBBY3Rpb25gMQBDb2xsZWN0aW9uYDEATGlzdGAxAEludDMyADxNYWluPmJfXzIARnVuY2AyADw+
OV9fMF8zADxNYWluPmJfXzBfMwA8PjlfXzBfNAA8TWFpbj5iX18wXzQAPE1haW4+Yl9fNQA8Pjlf
XzBfNgA8TWFpbj5iX18wXzYAPD45X18wXzcAPE1haW4+Yl9fMF83ADxNYWluPmJfXzgAPD45ADxN
b2R1bGU+AGdldF9DQwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTVF9l
OWJhZThkNDBlNWU0MDkxYTQ1NWZkZTZhZTE5MDUyYgBtc2NvcmxpYgA8PmMAZ2V0X0JjYwBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQAU2VuZABkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3Nh
Z2UATWFpbE1lc3NhZ2UAVmFyaWFibGUARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5
cGUAV2hlcmUAU3lzdGVtLkNvcmUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNv
dXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVl
AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAbXNnAEZvckVhY2gATWlj
cm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tz
LlNjcmlwdFRhc2sATmV0d29ya0NyZWRlbnRpYWwAU3lzdGVtLkNvbGxlY3Rpb25zLk9iamVjdE1v
ZGVsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1h
aWwAZW1haWwAU1RfZTliYWU4ZDQwZTVlNDA5MWE0NTVmZGU2YWUxOTA1MmIuZGxsAHNldF9Jc0Jv
ZHlIdG1sAHNldF9FbmFibGVTc2wAZ2V0X0l0ZW0AU3lzdGVtAFRyaW0Ac2V0X0Zyb20ARW51bQBy
ZXNvdXJjZU1hbgBUb0Jvb2xlYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24A
QXR0YWNobWVudENvbGxlY3Rpb24ARXhjZXB0aW9uAGdldF9UbwBDdWx0dXJlSW5mbwBTeXN0ZW0u
TGlucQBDaGFyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
ZTliYWU4ZDQwZTVlNDA5MWE0NTVmZGU2YWUxOTA1MmIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2U5YmFlOGQ0MGU1ZTQwOTFhNDU1ZmRlNmFlMTkwNTJi
LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBzZXRfQ3JlZGVudGlhbHMAU3VjY2Vz
cwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0F0dGFjaG1lbnRzAEZvcm1h
dABPYmplY3QAc2V0X1N1YmplY3QAU2VsZWN0AFN5c3RlbS5OZXQAU3BsaXQAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABBdHRhY2htZW50AENvbnZlcnQAc2V0X1BvcnQAVG9M
aXN0AHNldF9Ib3N0AElDcmVkZW50aWFsc0J5SG9zdABnZXRfTm93AGdldF9EYXkAc2V0X0JvZHkA
Z2V0X0Fzc2VtYmx5AElzTnVsbE9yRW1wdHkAAAAAACdVAHMAZQByADoAOgBzAGUAbgBkAEUAeABj
AGUAbABGAGkAbABlAAAfVQBzAGUAcgA6ADoAZQBtAGEAaQBsAEYAcgBvAG0AAC9VAHMAZQByADoA
OgBlAG0AYQBpAGwARgByAG8AbQBQAGEAcwBzAHcAbwByAGQAAB1VAHMAZQByADoAOgBlAG0AYQBp
AGwAcwBUAG8AAB9VAHMAZQByADoAOgBlAG0AYQBpAGwAcwBCAGMAYwAAHVUAcwBlAHIAOgA6AGUA
bQBhAGkAbABzAEMAYwAAJ1UAcwBlAHIAOgA6AGUAeABjAGUAbABGAGkAbABlAFAAYQB0AGgAAD9S
AEoAQQBiAG8AZwBhAGQAbwBzACAALQAgAFIAZQBwAG8AcgB0AGUAIABBAHUAdABvAG0A4QB0AGkA
YwBvAAE5UgBFAFMAVQBNAEUATgAgAEQARQAgAFMAQQBMAEQATwBTACAAQQBMACAAewAwAH0ALgB7
ADEAfQAABU0ATQAAgLFCAHUAZQBuAG8AcwAgAGQA7QBhAHMAOgA8AGIAcgA+ADwAYgByAD4AQQBk
AGoAdQBuAHQAbwAgAGwAbwAgAGkAbgBkAGkAYwBhAGQAbwAuADwAYgByAD4APABiAHIAPgA8AGIA
cgA+AFUAbgAgAHMAYQBsAHUAZABvACAAYwBvAHIAZABpAGEAbAAsADwAYgByAD4AUgBpAGcAbwBi
AGUAcgB0AG8ALgA8AGIAcgA+AAElcwBtAHQAcAAuAG8AZgBmAGkAYwBlADMANgA1AC4AYwBvAG0A
ACNVAHMAZQByADoAOgBlAHIAcgBvAHIAUwB0AHIAaQBuAGcAAHFTAFQAXwBlADkAYgBhAGUAOABk
ADQAMABlADUAZQA0ADAAOQAxAGEANAA1ADUAZgBkAGUANgBhAGUAMQA5ADAANQAyAGIALgBQAHIA
bwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABgTkvKw0d5Pr7Z9S3Q0i9cABCAB
AQgDIAABBSABARERBCABAQ4FIAEBEWUNBwgSGA4ODg4OET0SQQQgABJxBCAAEnUFIAESeRwDIAAc
AyAADgQAAQIOBiABHQ4dAxEQAQEVEoCNAR4AFRKAkQEeAAMKAQ4GFRJVAg4OBSACARwYGRACAhUS
gJEBHgEVEoCRAR4AFRJVAh4AHgEECgIODgYVElUCDgIYEAECFRKAkQEeABUSgJEBHgAVElUCHgAC
BhUSgJUBDgYVEoCNAQ4KIAEBFRKAlQETAAUgAgEODgYgAQESgJkEAAARPQMgAAgEIAEODgYAAw4O
HBwEIAEBAgUgABKAoQgVEoCpARKApQUgAQETAAYgAQESgLUFIAEBElEEIAEBHAgAARKAuRGAvQUg
ABKAwQcgAgEOEoDBBSAAEoDFCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEl0DBhJhAwYS
EAIGCAMGERQDBhJRAwYSHAcGFRJVAg4OBwYVElUCDgIEAAASXQQAABJhBQABARJhBAAAEhADAAAB
BCABAg4ECAASXQQIABJhBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NUX2U5YmFlOGQ0MGU1ZTQwOTFhNDU1ZmRlNmFlMTkwNTJiAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADQ6
AAAAAAAAAAAAAE46AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAOgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQDJlecYAAABAMmV5xg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGUAOQBiAGEAZQA4AGQANAAwAGUANQBlADQAMAA5ADEAYQA0ADUANQBmAGQAZQA2AGEAZQAx
ADkAMAA1ADIAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMA
NwA1AC4AMwA4ADMANAA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGUAOQBiAGEAZQA4AGQANAAwAGUANQBlADQAMAA5ADEAYQA0ADUANQBmAGQAZQA2AGEAZQAxADkA
MAA1ADIAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AZQA5AGIAYQBlADgAZAA0ADAAZQA1AGUANAAwADkAMQBhADQANQA1AGYAZABlADYA
YQBlADEAOQAwADUAMgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGUAOQBiAGEAZQA4AGQANAAwAGUANQBlADQAMAA5ADEAYQA0ADUANQBmAGQAZQA2AGEA
ZQAxADkAMAA1ADIAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgAzADcANQAuADMAOAAzADQANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgAzADcANQAuADMAOAAzADQANQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABgOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Send files information email"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:DTSID="{C70C592E-A14A-440E-9D7E-9A7D3C634C7D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send files information email"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_0a6e7c14ea614a13b3009c55457dd3fc"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::downloadEndTime,User::downloadStartTime,User::emailFrom,User::emailFromPassword,User::emailsBcc,User::emailsCc,User::emailsTo,User::localDir,User::remoteFiles,User::SqlQuery1EndTime,User::SqlQuery1StartTime,User::SqlQuery2EndTime,User::SqlQuery2StartTime"
          ReadWriteVariables="User::errorString">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_0a6e7c14ea614a13b3009c55457dd3fc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_0a6e7c14ea614a13b3009c55457dd3fc")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_0a6e7c14ea614a13b3009c55457dd3fc.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ca3f5376-404b-4ac8-a4a2-1509db35bce8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_0a6e7c14ea614a13b3009c55457dd3fc</RootNamespace>
    <AssemblyName>ST_0a6e7c14ea614a13b3009c55457dd3fc</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Net.Mail;
using System.Text;
using System.IO;
using System.Globalization;
#endregion

namespace ST_0a6e7c14ea614a13b3009c55457dd3fc
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                MailMessage msg = new MailMessage();

                String emailFrom = (String)Dts.Variables["User::emailFrom"].Value;
                String password = (String)Dts.Variables["User::emailFromPassword"].Value;
                String emailsToString = (String)Dts.Variables["User::emailsTo"].Value;
                String emailsBccString = (String)Dts.Variables["User::emailsBcc"].Value;
                String emailsCcString = (String)Dts.Variables["User::emailsCc"].Value;

                emailsToString
                    .Split(',')
                    .ToList()
                    .Select(email => email.Trim())
                    .Where(email => !String.IsNullOrEmpty(email))
                    .ToList()
                    .ForEach(email => msg.To.Add(email));

                emailsBccString
                    .Split(',')
                    .ToList()
                    .Select(email => email.Trim())
                    .Where(email => !String.IsNullOrEmpty(email))
                    .ToList()
                    .ForEach(email => msg.Bcc.Add(email));

                emailsCcString
                    .Split(',')
                    .ToList()
                    .Select(email => email.Trim())
                    .Where(email => !String.IsNullOrEmpty(email))
                    .ToList()
                    .ForEach(email => msg.CC.Add(email));

                msg.From = new MailAddress(emailFrom, "RJAbogados - Reporte Automático");
                msg.Subject = String.Format("CARGA DE ARCHIVOS AL {0}.{1}", DateTime.Now.Day, DateTime.Now.ToString("MM"));
                msg.Body = CreateBodyEmail();
                msg.IsBodyHtml = true;

                SmtpClient client = new SmtpClient();
                client.Host = "smtp.office365.com";
                client.Credentials = new System.Net.NetworkCredential(emailFrom, password);
                client.Port = 587;
                client.EnableSsl = true;

                client.Send(msg);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        private string CreateBodyEmail()
        {
            String localDir = (String)Dts.Variables["User::localDir"].Value;
            String remoteFilesString = (String)Dts.Variables["User::remoteFiles"].Value;

            var files = remoteFilesString.Split(',')
                .ToList()
                .Select(str => String.Format("{0}{1}{2}",
                                localDir,
                                localDir.EndsWith("\\") ? "" : "\\",
                                str.Trim()
                                    .Replace("$$$", DateTime.Now.ToString("ddMM"))
                                    .Replace(".zip", ".txt"))).ToArray();

            var time = DateTime.Now;
            var downloadStartTime = Convert.ToDateTime(Dts.Variables["User::downloadStartTime"].Value.ToString());
            var downloadEndTime = Convert.ToDateTime(Dts.Variables["User::downloadEndTime"].Value.ToString());
            var SqlQuery1StartTime = Convert.ToDateTime(Dts.Variables["User::SqlQuery1StartTime"].Value.ToString());
            var SqlQuery1EndTime = Convert.ToDateTime(Dts.Variables["User::SqlQuery1EndTime"].Value.ToString());
            var SqlQuery2EndTime = Convert.ToDateTime(Dts.Variables["User::SqlQuery2EndTime"].Value.ToString());
            var emailFormatFile = @"C:\SSIS_Configuration\email.html";
            var emailFormat = File.ReadAllText(emailFormatFile, Encoding.Default);

            var weightFile1 = new FileInfo(files[0]).Length;
            var weightFile2 = new FileInfo(files[1]).Length;
            var totalWeight = weightFile1 + weightFile2;

            var percent1 = (double)weightFile1 / totalWeight;
            var percent2 = (double)weightFile2 / totalWeight;

            var elapsedTime = downloadEndTime.Subtract(downloadStartTime).TotalSeconds;

            var emailBody = String.Format(emailFormat,
                                /**/            String.Format("{0}, {1}", Path.GetFileName(files[0]), Path.GetFileName(files[1])),
                                /**/            Path.GetFileName(files[0]),
                                /**/            downloadStartTime.ToString("hh:mm:ss tt", CultureInfo.InvariantCulture),
                                /**/            Math.Round(elapsedTime * percent1),
                                /**/            String.Format("{0:n0}", (long)weightFile1 / 1024L),
                                /**/            SqlQuery1StartTime.ToString("hh:mm:ss tt", CultureInfo.InvariantCulture),
                                /**/            SqlQuery1EndTime.Subtract(SqlQuery1StartTime).TotalSeconds,
                                /**/            Path.GetFileName(files[1]),
                                /**/            downloadStartTime.AddSeconds(elapsedTime * percent1).ToString("hh:mm:ss tt", CultureInfo.InvariantCulture),
                                /**/            Math.Round(elapsedTime * percent2),
                                /**/            String.Format("{0:n0}", (long)weightFile2 / 1024L),
                                /**/            SqlQuery1EndTime.ToString("hh:mm:ss tt", CultureInfo.InvariantCulture),
                                /**/            SqlQuery2EndTime.Subtract(SqlQuery1EndTime).TotalSeconds
                                );

            return emailBody;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_0a6e7c14ea614a13b3009c55457dd3fc</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_0a6e7c14ea614a13b3009c55457dd3fc</msb:DisplayName>
		<msb:ProjectId>{4E17C74D-DC61-4E31-886F-5513E77E0823}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_0a6e7c14ea614a13b3009c55457dd3fc.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties.Settings.get_Default():ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties.Sett" +
    "ings")]

namespace ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_0a6e7c14ea614a13b3009c55457dd3fc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_0a6e7c14ea614a13b3009c55457dd3fc.dll">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
DwM+BwYAUQgOBg4A4wGaBQYAnAAOBgYAKgMPBwYA5QZeBwYAtAZdBg4A+gKEBQ4AWwOEBQ4A4gJI
BgoAcgU3BRIA9AdKAhIA7wFKAgYA5wQOBgYAzAYOBhYA+AHABgYAhACVAQYAbQCVAQYAewAOBg4A
HwiaBQYAiwAOBg4AlwiaBQ4AYAVrCA4AwwhrCAYAoggOBgYAwgTWCAYALgIrAQYAqwYrAQYA/wQr
AQYA0QYOBgYA+gQOBgYAAwIOBgYAuQAOBgYAagIOBgYACgIOBgYAEwlyBg4AhAaaBQAAAAAbAQAA
AAABAAEAAQAQAD0GcQE5AAEAAQAAABAAZQfBB1EAAQAEAAABEAD+B8EHcQADAAgAAwEAADMIAABJ
AAQACwADARAAFwAAAFEABwALAAMhEABlAQAAUQAIAA8AAwEQACwAAABRAA8AFwARACgGxwERAKEC
ywERAMcBzwEGBlQB0wFWgBcI1gFWgIEC1gEGAO4E2gE2ABcB3gEWAAEA4gEWAFcA6gEWAKMA4gEW
AL8A6gEWAOAA4gEWAPYA6gEGAPUG8gFQIAAAAACGAEMGBgABAHAjAAAAAIEAqgXyAAEAPSYAAAAA
hhj+BgYAAQBFJgAAAACDGP4GBgABAE0mAAAAAJMI4Qb1AQEAeSYAAAAAkwiJAkwBAQCAJgAAAACT
CJUC+gEBAIgmAAAAAJYIfAgAAgIAjyYAAAAAhhj+BgYAAgCXJgAAAACRGAQHBQICAEUmAAAAAIYY
/gYGAAIAoyYAAAAAgwCRABAAAgC2JgAAAACDANUAEAADAMkmAAAAAIMADAEQAAQA3CYAAAAAkRgE
BwUCBQBFJgAAAACGGP4GBgAFAOgmAAAAAIMACgDUAAUA8CYAAAAAgwBgAJgBBgDoJgAAAACDAKwA
1AAHAPAmAAAAAIMAyACYAQgA6CYAAAAAgwDpANQACQDwJgAAAACDAP8AmAEKAEUmAAAAAIYY/gYG
AAsA/CYAAAAAgwBBANQACwAAAAEAvAQAAAEAugUAAAEAugUAAAEAugUAAAEAugUAAAEAugUAAAEA
ugUAAAEAugUAAAEAugUAAAEAugUAAAEACwcJAP4GAQARAP4GBgAZAP4GCgApAP4GEAAxAP4GEAA5
AP4GEABBAP4GEABJAP4GEABRAP4GEABZAP4GEABhAP4GEABpAP4GBgCZAP4GBgC5AP4GBgDZAP4G
FQCpAP4GBgBxACsIKADpAPAHLQDxAAUGMgD5AKgEOAABAXYIPAARAbMIQwAMAP4GYAARAWQIZgAU
AP4GYAARAW8CjAAcAP4GYAAkAPIEswAxAf4GvgCpABoGxAB5AO4IywB5APYI0AB5AOUE1AABAUEI
2QCpAFgIEACpAAYJEACpAOgF4ABBAf4GBgBBAboIEABJAf4GvgBBAQcI5QBBAaoIAQBBAfcF4ABB
AbQB7ADpAIgIAQCBANcB8gD5ALIE9gARAf4IFgGhAOUE8gBZAT8CJAFhAXwIKgFpAeIIMAFxAf4G
EABxAQQFOAF5AEgIPAGJAC0HQwF5ATMCRwHJALECTAF5AOUEUQGJAbkBWQEBAUEIXgF5ACIHZAEB
AUEIagFxAP4GBgChAP4GBgChARwCcQGhAQ8JegHBAP4GgAHhAP4GBgCpAKQGiAG5AbABEACpAGkB
iAGpACQBiAEBARUG8gABARwJjgEBAQ8FmAEBAb8BnQEBAUEIowEIABQAvQEIABgAwgEpAHsAQAIu
AAsAGAIuABMAIQIuABsAQAIuACMASQIuACsAcgIuADMAcgIuADsAcgIuAEMASQIuAEsAeAIuAFMA
cgIuAFsAjwJDAGMAwgFJAHsAQAJhAGsAwgFjAHMAwgHDAGsAwgHjAGsAwgEDAWsAwgEbAPsAkwED
AAEABAADAAAA5QYJAgAAvgIOAgAAgAgTAgIABQADAAIABgAFAAEABwAFAAIACAAHAFkAhQClAKwA
BIAAAAEAAADyGGdTAAAAAAAAcQEAAAQAAAAAAAAAAAAAAKsBXAEAAAAACwAAAAAAAAAAAAAAtAEY
BQAAAAAEAAAAAAAAAAAAAACrAQ4GAAAAAAsAAAAAAAAAAAAAALQBNQEAAAAABAAAAAAAAAAAAAAA
qwF1AgAAAAAAAAAAAQAAAG8HAAAFAAIABgACAAcAAgAIAAIALQBVADEAgAA1AFUAYQBVAAAAAAAA
PD45X18wXzAAPE1haW4+Yl9fMF8wADw+Y19fRGlzcGxheUNsYXNzMF8wADw+Y19fRGlzcGxheUNs
YXNzMV8wADxDcmVhdGVCb2R5RW1haWw+Yl9fMAA8PjlfXzBfMQA8TWFpbj5iX18wXzEASUVudW1l
cmFibGVgMQBBY3Rpb25gMQBMaXN0YDEASW50MzIAPE1haW4+Yl9fMgBGdW5jYDIAPD45X18wXzMA
PE1haW4+Yl9fMF8zAEludDY0ADw+OV9fMF80ADxNYWluPmJfXzBfNAA8TWFpbj5iX181ADw+OV9f
MF82ADxNYWluPmJfXzBfNgA8PjlfXzBfNwA8TWFpbj5iX18wXzcAPE1haW4+Yl9fOAA8PjkAPE1v
ZHVsZT4AZ2V0X0NDAFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFs
dWVfXwBtc2NvcmxpYgA8PmMAZ2V0X0JjYwBTVF8wYTZlN2MxNGVhNjE0YTEzYjMwMDljNTU0NTdk
ZDNmYwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQAU2VuZABSb3VuZABSZXBsYWNlAGRl
ZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBNYWlsTWVzc2FnZQBWYXJpYWJsZQBFbnVtZXJhYmxl
AERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAEdldEZpbGVO
YW1lAFRvRGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAFdoZXJl
AFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAGdldF9JbnZhcmlhbnRDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHNldF9WYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRv
U3RyaW5nAG1zZwBGb3JFYWNoAE1hdGgAUGF0aABnZXRfTGVuZ3RoAEVuZHNXaXRoAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAE5ldHdvcmtDcmVkZW50aWFsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwAQ3JlYXRlQm9keUVtYWlsAGVtYWlsAFNUXzBhNmU3YzE0
ZWE2MTRhMTNiMzAwOWM1NTQ1N2RkM2ZjLmRsbABzZXRfSXNCb2R5SHRtbABzZXRfRW5hYmxlU3Ns
AGdldF9JdGVtAFN5c3RlbQBUcmltAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AVGltZVNwYW4A
U2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0
ZW0uUmVmbGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24ARXhjZXB0aW9uAGdldF9UbwBGaWxl
SW5mbwBDdWx0dXJlSW5mbwBTeXN0ZW0uTGlucQBDaGFyAElGb3JtYXRQcm92aWRlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGxvY2FsRGlyAC5jdG9yAC5jY3RvcgBzdHIAU3lzdGVtLkRpYWdub3N0aWNz
AEFkZFNlY29uZHMAZ2V0X1RvdGFsU2Vjb25kcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMGE2ZTdjMTRlYTYxNGExM2IzMDA5YzU1NDU3ZGQzZmMu
UHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzBhNmU3YzE0
ZWE2MTRhMTNiMzAwOWM1NTQ1N2RkM2ZjLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5n
cwBzZXRfQ3JlZGVudGlhbHMAU3VjY2VzcwBNYWlsQWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3Vs
dHMARm9ybWF0AFN1YnRyYWN0AE9iamVjdABzZXRfU3ViamVjdABTZWxlY3QAU3lzdGVtLk5ldABT
cGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AENvbnZlcnQAc2V0X1Bv
cnQAVG9MaXN0AHNldF9Ib3N0AElDcmVkZW50aWFsc0J5SG9zdABTeXN0ZW0uVGV4dABSZWFkQWxs
VGV4dABnZXRfTm93AGdldF9EYXkAVG9BcnJheQBzZXRfQm9keQBnZXRfQXNzZW1ibHkASXNOdWxs
T3JFbXB0eQAAAAAfVQBzAGUAcgA6ADoAZQBtAGEAaQBsAEYAcgBvAG0AAC9VAHMAZQByADoAOgBl
AG0AYQBpAGwARgByAG8AbQBQAGEAcwBzAHcAbwByAGQAAB1VAHMAZQByADoAOgBlAG0AYQBpAGwA
cwBUAG8AAB9VAHMAZQByADoAOgBlAG0AYQBpAGwAcwBCAGMAYwAAHVUAcwBlAHIAOgA6AGUAbQBh
AGkAbABzAEMAYwAAP1IASgBBAGIAbwBnAGEAZABvAHMAIAAtACAAUgBlAHAAbwByAHQAZQAgAEEA
dQB0AG8AbQDhAHQAaQBjAG8AATlDAEEAUgBHAEEAIABEAEUAIABBAFIAQwBIAEkAVgBPAFMAIABB
AEwAIAB7ADAAfQAuAHsAMQB9AAAFTQBNAAAlcwBtAHQAcAAuAG8AZgBmAGkAYwBlADMANgA1AC4A
YwBvAG0AACNVAHMAZQByADoAOgBlAHIAcgBvAHIAUwB0AHIAaQBuAGcAAB1VAHMAZQByADoAOgBs
AG8AYwBhAGwARABpAHIAACNVAHMAZQByADoAOgByAGUAbQBvAHQAZQBGAGkAbABlAHMAAC9VAHMA
ZQByADoAOgBkAG8AdwBuAGwAbwBhAGQAUwB0AGEAcgB0AFQAaQBtAGUAACtVAHMAZQByADoAOgBk
AG8AdwBuAGwAbwBhAGQARQBuAGQAVABpAG0AZQAAMVUAcwBlAHIAOgA6AFMAcQBsAFEAdQBlAHIA
eQAxAFMAdABhAHIAdABUAGkAbQBlAAAtVQBzAGUAcgA6ADoAUwBxAGwAUQB1AGUAcgB5ADEARQBu
AGQAVABpAG0AZQAALVUAcwBlAHIAOgA6AFMAcQBsAFEAdQBlAHIAeQAyAEUAbgBkAFQAaQBtAGUA
AEFDADoAXABTAFMASQBTAF8AQwBvAG4AZgBpAGcAdQByAGEAdABpAG8AbgBcAGUAbQBhAGkAbAAu
AGgAdABtAGwAABF7ADAAfQAsACAAewAxAH0AABdoAGgAOgBtAG0AOgBzAHMAIAB0AHQAAA17ADAA
OgBuADAAfQAAcVMAVABfADAAYQA2AGUANwBjADEANABlAGEANgAxADQAYQAxADMAYgAzADAAMAA5
AGMANQA1ADQANQA3AGQAZAAzAGYAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAE3sAMAB9AHsAMQB9AHsAMgB9AAADXAAAAQAHJAAkACQAAAlkAGQATQBNAAAJLgB6
AGkAcAAACS4AdAB4AHQAAADfYxqM8vQAQ4kWLeUjerFYAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARFpDAcHEhgODg4OET0SQQQgABJ1BCAAEnkFIAESfRwDIAAcBiABHQ4dAxEQAQEVEoCNAR4AFRKA
kQEeAAMKAQ4GFRJZAg4OBSACARwYGRACAhUSgJEBHgEVEoCRAR4AFRJZAh4AHgEECgIODgYVElkC
DgIYEAECFRKAkQEeABUSgJEBHgAVElkCHgACBhUSgJUBDgYVEoCNAQ4KIAEBFRKAlQETAAUgAgEO
DgYgAQESgJkEAAARPQMgAAgEIAEODgYAAw4OHBwEIAEBAgYgAQESgKkFIAEBElUDIAAOBCABARwa
Bw8SIB0OET0RPRE9ET0RPQoKCg0NDRFFET0NEAEBHR4AFRKAkQEeAAUAARE9DgUAABKAsQcAAg4O
EoCxAyAACgYgARFFET0DIAANBAABDg4EAAASZQcgAg4OEoDBBAABDQ0FAAIODhwFIAERPQ0GAAIO
Dh0cCAABEoDREYDVBSAAEoDZByACAQ4SgNkFIAASgN0EAAECDgQHARE9BCABAg4FIAIODg4HAAQO
DhwcHAi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJhAwYSZQMGEhACBggDBhEUAwYSVQMG
EhwHBhUSWQIODgcGFRJZAg4CAgYOBAAAEmEFAAEBEmUEAAASEAMAAAEECAASYQQIABJlBAgAEhAI
AQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzBh
NmU3YzE0ZWE2MTRhMTNiMzAwOWM1NTQ1N2RkM2ZjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5h
bWUQLk5FVCBGcmFtZXdvcmsgNAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA6D8AAAAAAAAAAAAAAkAAAAAgAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAPQ/AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAA
AP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQBnU/IYAAABAGdT8hg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABf
ADAAYQA2AGUANwBjADEANABlAGEANgAxADQAYQAxADMAYgAzADAAMAA5AGMANQA1ADQANQA3AGQA
ZAAzAGYAYwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADMAOAA2
AC4AMgAxADMANQAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfADAA
YQA2AGUANwBjADEANABlAGEANgAxADQAYQAxADMAYgAzADAAMAA5AGMANQA1ADQANQA3AGQAZAAz
AGYAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AMABhADYAZQA3AGMAMQA0AGUAYQA2ADEANABhADEAMwBiADMAMAAwADkAYwA1ADUANAA1
ADcAZABkADMAZgBjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfADAAYQA2AGUANwBjADEANABlAGEANgAxADQAYQAxADMAYgAzADAAMAA5AGMANQA1ADQANQA3
AGQAZAAzAGYAYwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
NgAzADgANgAuADIAMQAzADUAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANgAzADgANgAuADIAMQAzADUAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAAUMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Star time update TRAN_DEUDA"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea de expresión"
      DTS:DTSID="{C20433A6-0556-47F0-806D-EB625EE1FF88}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Star time update TRAN_DEUDA"
      DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExpressionTask
          Expression="@[User::SqlQuery1StartTime] =  GETDATE()" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Unzip local files"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:DTSID="{F540A9A3-D543-4FB4-89CF-5D91DF202D44}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Unzip local files"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_56db96451a734e25b830a69b0e5f60b9"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::localDir,User::remoteFiles"
          ReadWriteVariables="User::errorString">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56db96451a734e25b830a69b0e5f60b9.Properties.Settings.get_Default():ST_56db96451a734e25b830a69b0e5f60b9.Properties.Sett" +
    "ings")]

namespace ST_56db96451a734e25b830a69b0e5f60b9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Linq;
using System.Diagnostics;
#endregion

namespace ST_56db96451a734e25b830a69b0e5f60b9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                String localDir = (String)Dts.Variables["User::localDir"].Value;
                String remoteFilesString = (String)Dts.Variables["User::remoteFiles"].Value;

                remoteFilesString.Split(',')
                    .ToList()
                    .Select(str => String.Format("{0}{1}{2}", 
                                    localDir, 
                                    localDir.EndsWith("\\") ? "" : "\\", 
                                    str.Trim().Replace("$$$", DateTime.Now.ToString("ddMM"))))
                    .Where(str => str.EndsWith(".zip"))
                    .ToList()
                    .ForEach(localFile => UnzipLocalFile(localFile, localDir));

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        static void UnzipLocalFile(string localFile, string localDir)
        {
            var proc = new Process
            {
                StartInfo = new ProcessStartInfo
                {
                    FileName = "7z.exe",
                    Arguments = String.Format("e \"{0}\" -o\"{1}\" -y", localFile, localDir),
                    UseShellExecute = false,
                    RedirectStandardOutput = true,
                    CreateNoWindow = true
                }
            };

            proc.Start();
            proc.WaitForExit();
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_56db96451a734e25b830a69b0e5f60b9.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0597ef14-008d-4115-af36-255ae29a2fb4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_56db96451a734e25b830a69b0e5f60b9</RootNamespace>
    <AssemblyName>ST_56db96451a734e25b830a69b0e5f60b9</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_56db96451a734e25b830a69b0e5f60b9</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_56db96451a734e25b830a69b0e5f60b9</msb:DisplayName>
		<msb:ProjectId>{9673F3DB-A6D3-4555-AB7B-42128F7D5288}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_56db96451a734e25b830a69b0e5f60b9.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_56db96451a734e25b830a69b0e5f60b9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_56db96451a734e25b830a69b0e5f60b9")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56db96451a734e25b830a69b0e5f60b9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56db96451a734e25b830a69b0e5f60b9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56db96451a734e25b830a69b0e5f60b9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_56db96451a734e25b830a69b0e5f60b9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_56db96451a734e25b830a69b0e5f60b9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_56db96451a734e25b830a69b0e5f60b9.dll">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
hhiFBQYAAwC3IQAAAACDGIUFBgADAL8hAAAAAJMIaAVVAQMA6yEAAAAAkwixAVoBAwDyIQAAAACT
CL0BXwEDAPohAAAAAJYIzQZlAQQAASIAAAAAhhiFBQYABAAJIgAAAACRGIsFagEEALchAAAAAIYY
hQUGAAQAGCIAAAAAgwAWAP4ABAB1IgAAAACDAFUAEAAFAIMiAAAAAJEYiwVqAQYAtyEAAAAAhhiF
BQYABgCPIgAAAACDACoA9AAGAAAAAQBSAQAAAgB8BQAAAQDjAwAAAQCSBQAAAQBSAQAAAQCSBQkA
hQUBABEAhQUGABkAhQUKACkAhQUQADEAhQUQADkAhQUQAEEAhQUQAEkAhQUQAFEAhQUQAFkAhQUQ
AGEAhQUQAGkAhQUGAIkAhQUGAKkAhQUGAMkAhQUVAHEAggYiANkAWwYnAOEAtQQsAOkAzwMyAPEA
uwY2AAEB7gY9AAwAhQVaAAEBtAZgABQAhQVaAAEBlwGGABwAhQVaACQADAStANkA2QYBAHkA/wC4
AOkA2QO8ACEBhQUGACkBhQUGACkBXAEQAPEApgbBACkBmAYQACkBuwPIACkB9QbIACkBGAfIACEB
OAXNACEB6AbUACEBwQYGAHEAhQUGAJEAhQUGADEBMQHYADEBKwfhALEAhQXnANEAhQUGAPEAFAT0
APEAxQS4AJkAEAf5AJkAAwT+APEA5wADAfEApgYJAQgAFAAjAQgAGAAoASkAewClAS4ACwB9AS4A
EwCGAS4AGwClAS4AIwCuAS4AKwDXAS4AMwDXAS4AOwDXAS4AQwCuAS4ASwDdAS4AUwDXAS4AWwD0
AUMAYwAoAUkAewClAWEAawAoAWMAcwAoAcMAawAoAeMAawAoARsA7wADAAEABAADAAAAbAVuAQAA
0QFzAQAA0QZ4AQIABQADAAIABgAFAAEABwAFAAIACAAHAFMAfwCfAKYABIAAAAEAAADnGMmVAAAA
AAAAawAAAAQAAAAAAAAAAAAAABEBvwAAAAAACwAAAAAAAAAAAAAAGgEdBAAAAAAEAAAAAAAAAAAA
AAARAb4EAAAAAAsAAAAAAAAAAAAAABoBmAAAAAAABAAAAAAAAAAAAAAAEQGdAQAAAAAAAAAAAQAA
ANoFAAAFAAIABgACAAcAAgArAE8ALwB6ADMATwAAAAAAADw+Y19fRGlzcGxheUNsYXNzMF8wADxN
YWluPmJfXzAAPD45X18wXzEAPE1haW4+Yl9fMF8xAElFbnVtZXJhYmxlYDEAQWN0aW9uYDEATGlz
dGAxADxNYWluPmJfXzIARnVuY2AyADw+OQBTVF81NmRiOTY0NTFhNzM0ZTI1YjgzMGE2OWIwZTVm
NjBiOQA8TW9kdWxlPgBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2Nv
cmxpYgA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVwbGFjZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUARW51bWVyYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRU
eXBlRnJvbUhhbmRsZQBVbnppcExvY2FsRmlsZQBsb2NhbEZpbGUAc2V0X0ZpbGVOYW1lAERhdGVU
aW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBXaGVyZQBTeXN0ZW0uQ29y
ZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFz
a0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21w
YXRpYmlsaXR5QXR0cmlidXRlAHNldF9Vc2VTaGVsbEV4ZWN1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1
ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEZvckVhY2gARW5kc1dp
dGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVs
AFNUXzU2ZGI5NjQ1MWE3MzRlMjViODMwYTY5YjBlNWY2MGI5LmRsbABnZXRfSXRlbQBTeXN0ZW0A
VHJpbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lz
dGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZv
AHNldF9TdGFydEluZm8AUHJvY2Vzc1N0YXJ0SW5mbwBTeXN0ZW0uTGlucQBDaGFyAGdldF9SZXNv
dXJjZU1hbmFnZXIAbG9jYWxEaXIALmN0b3IALmNjdG9yAHN0cgBTeXN0ZW0uRGlhZ25vc3RpY3MA
U3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU2ZGI5
NjQ1MWE3MzRlMjViODMwYTY5YjBlNWY2MGI5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNl
cwBEZWJ1Z2dpbmdNb2RlcwBTVF81NmRiOTY0NTFhNzM0ZTI1YjgzMGE2OWIwZTVmNjBiOS5Qcm9w
ZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBQcm9jZXNzAGdldF9EdHMAU2Ny
aXB0UmVzdWx0cwBzZXRfQXJndW1lbnRzAEZvcm1hdABPYmplY3QAU2VsZWN0AFNwbGl0AFdhaXRG
b3JFeGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN0YXJ0AFRvTGlzdABzZXRfUmVkaXJl
Y3RTdGFuZGFyZE91dHB1dABnZXRfTm93AHNldF9DcmVhdGVOb1dpbmRvdwBnZXRfQXNzZW1ibHkA
AB1VAHMAZQByADoAOgBsAG8AYwBhAGwARABpAHIAACNVAHMAZQByADoAOgByAGUAbQBvAHQAZQBG
AGkAbABlAHMAACNVAHMAZQByADoAOgBlAHIAcgBvAHIAUwB0AHIAaQBuAGcAAA03AHoALgBlAHgA
ZQAAJWUAIAAiAHsAMAB9ACIAIAAtAG8AIgB7ADEAfQAiACAALQB5AAFxUwBUAF8ANQA2AGQAYgA5
ADYANAA1ADEAYQA3ADMANABlADIANQBiADgAMwAwAGEANgA5AGIAMABlADUAZgA2ADAAYgA5AC4A
UAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAATewAwAH0AewAxAH0AewAy
AH0AAANcAAABAAckACQAJAAACWQAZABNAE0AAAkuAHoAaQBwAAAAIqiC7CfBaUO7q4FsxZR26gAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERYQYHAhIYEj0EIAASbQQgABJxBSABEnUcAyAAHAYgAR0O
HQMREAEBFRKAhQEeABUSgIkBHgADCgEOBhUSUQIODgUgAgEcGBkQAgIVEoCJAR4BFRKAiQEeABUS
UQIeAB4BBAoCDg4GFRJRAg4CGBABAhUSgIkBHgAVEoCJAR4AFRJRAh4AAgYVEoCNAQ4GFRKAhQEO
CiABARUSgI0BEwADIAAOBCABARwGAAMODhwcBCABAQIGIAEBEoCVAyAAAggAARKAmRGAnQUgABKA
oQcgAgEOEoChBAcBEU0EIAECDgQAABFNBCABDg4FIAIODg4HAAQODhwcHAi3elxWGTTgiQiJhF3N
gIDMkQQAAAAABAEAAAADBhJZAwYSXQMGEhACBggDBhEUAgYOAwYSHAcGFRJRAg4CBQACAQ4OBAAA
ElkEAAASXQUAAQESXQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNTZkYjk2NDUxYTczNGUyNWI4MzBh
NjliMGU1ZjYwYjkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNwAARwEAGi5ORVRGcmFtZXdv
cmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAAEA0AAAAAAAAAAAAAFo0AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMNAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDJlecYAAABAMmV5xg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADUANgBkAGIAOQA2ADQANQAxAGEANwAzADQAZQAyADUAYgA4ADMAMABhADYAOQBiADAA
ZQA1AGYANgAwAGIAOQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2
ADMANwA1AC4AMwA4ADMANAA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADUANgBkAGIAOQA2ADQANQAxAGEANwAzADQAZQAyADUAYgA4ADMAMABhADYAOQBiADAAZQA1
AGYANgAwAGIAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANQA2AGQAYgA5ADYANAA1ADEAYQA3ADMANABlADIANQBiADgAMwAwAGEANgA5
AGIAMABlADUAZgA2ADAAYgA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADUANgBkAGIAOQA2ADQANQAxAGEANwAzADQAZQAyADUAYgA4ADMAMABhADYAOQBi
ADAAZQA1AGYANgAwAGIAOQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAzADcANQAuADMAOAAzADQANQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAzADcANQAuADMAOAAzADQANQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABsNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update excel file"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Script"
      DTS:Disabled="True"
      DTS:DTSID="{33814AF2-45FE-453E-8270-A9A50B0B62FD}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update excel file"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a0da00915b6e49be98edbf8efc571b84"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::excelFilePath"
          ReadWriteVariables="User::errorString">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0da00915b6e49be98edbf8efc571b84.Properties.Settings.get_Default():ST_a0da00915b6e49be98edbf8efc571b84.Properties.Sett" +
    "ings")]

namespace ST_a0da00915b6e49be98edbf8efc571b84.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a0da00915b6e49be98edbf8efc571b84.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D1E44D77-54AD-4190-A818-E784A3406F3B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a0da00915b6e49be98edbf8efc571b84</RootNamespace>
    <AssemblyName>ST_a0da00915b6e49be98edbf8efc571b84</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="Microsoft.Office.Core">
      <Guid>{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}</Guid>
      <VersionMajor>2</VersionMajor>
      <VersionMinor>8</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="Microsoft.Office.Interop.Excel">
      <Guid>{00020813-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>9</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="VBIDE">
      <Guid>{0002E157-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>5</VersionMajor>
      <VersionMinor>3</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Excel = Microsoft.Office.Interop.Excel;
using System.Runtime.InteropServices;
#endregion

namespace ST_a0da00915b6e49be98edbf8efc571b84
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                String excelFilePath = (String)Dts.Variables["User::excelFilePath"].Value;

                var excelApp = new Excel.Application();
                var excelWorkbook = excelApp.Workbooks.Open(excelFilePath);
                excelWorkbook.RefreshAll();
                excelWorkbook.Save();

                GC.Collect();
                GC.WaitForPendingFinalizers();

                excelWorkbook.Close();
                Marshal.ReleaseComObject(excelWorkbook);

                excelApp.Quit();
                Marshal.ReleaseComObject(excelApp);

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Variables["User::errorString"].Value = ex.Message;
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_a0da00915b6e49be98edbf8efc571b84</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_a0da00915b6e49be98edbf8efc571b84</msb:DisplayName>
		<msb:ProjectId>{56BD1D91-03D2-4701-A6D6-6B5793AD8376}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a0da00915b6e49be98edbf8efc571b84.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a0da00915b6e49be98edbf8efc571b84")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_a0da00915b6e49be98edbf8efc571b84")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0da00915b6e49be98edbf8efc571b84.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0da00915b6e49be98edbf8efc571b84.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a0da00915b6e49be98edbf8efc571b84.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a0da00915b6e49be98edbf8efc571b84.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a0da00915b6e49be98edbf8efc571b84.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a0da00915b6e49be98edbf8efc571b84.dll">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
YgACAAAAAAADAAYYGwAGAAIAAAAAAAMQxgW1BdQAAgAAAAAAAwAGGEwABgASAAAAAAADEMYNfQfo
ABIAAAAAAAMABhgOAAYAEwAAAAAAAxDGDRMIawATAAAAAAADAAYYZgAGABQAAAAAAAMQxgUOCAYA
FAAAAAAAAwAGGAEABgAUAAAAAAADEMYFCALtABQAAAAAAAMABhhZAAYAFwAAAAAAAxDGBWEFBgAX
AAAAAAADAAYYdAAGABcAAAAAAAMQxgV+BAYAFwAAAAEAeAQAIAAAAAABIAEAdgERIAIAcQcRIAMA
fQgRIAQA7gcRIAUAAAERIAYA+AARIAcA2QARIAgAxQURIAkAPwYRIAoASQERIAsAaQgRIAwASQYR
IA0AYAgRIA4ADAURIA8AzQAAIAAAAAAAIAAAAAARIAEAHwcRIAIAdgERIAMAtgQHADAABwAYAAgA
NAAIACgACwCBAAkAXQYBABEAXQYGABkAXQYKACkAXQYQADEAXQYQADkAXQYQAEEAXQYQAEkAXQYQ
AFEAXQYQAFkAXQYQAGEAXQYQAGkAXQYGAIkAXQYGALEAXQYVAMEAXQYGAMkAXQYbANEAXQYQANkA
XQYGAOkAXQYgANkAXQYoAPEAXQYuAPkAXQYQAAkBXQYBABEBXQYBAHEAvwc6ABkBWgdAACEBlAVG
ACkBZARNADkBXQYQAOEAjABRAEEBCQFZAOEApARfAEkBBghiAEkBngdiAFEB9QdmABkBLAgBAHkA
KAFrACkBbgRvAHEAXQYGAJEAXQYGAOEAZAF0AOEAcAh8AJkAXQaCALkAXQYGAAgAFACcAAgAGACh
ACkAcwA0AS4ACwAMAS4AEwAVAS4AGwA0AS4AIwA9AS4AKwBmAS4AMwBmAS4AOwBmAS4AQwA9AS4A
SwBsAS4AUwBmAS4AWwCDAUMAYwChAEkAcwA0AWEAewChAGMAawChAIkAuwDdAaMAewChAKMAgwAc
AqMAiwAjAqMAkwChAKkAuwDmAcMAewChAMMAmwBNAsMAowCkAuMAewChAOMAiwD9AuMAqwAnA+MA
kwChAAMBewChAAMBiwCHAwMBqwAnAwMBkwChACMBewChACMBiwCxAyMBgwAcAiMBkwChAEMBewCh
AEMBmwDbA0MBowA8BGABuwDLAWABwwDUAWMBewChAGMBiwCaBGMBswDEBGMBkwChAIMBewChAIMB
swDEBIMBiwD9AoMBkwChAKABuwDdAaMBewChAKMBiwCHA6MBkwChAOABuwDmASACuwDvAWACwwD4
AWACuwABAqACuwAKAuACuwATAuACwwDmAQUApgAHAKgACQCqAAsAqgANAKoADwCqABEAqgATAKoA
FQCqABcAqgAZAKoAGwCqAB0AqgAfAKoAIQCqACMAqgAlAKYAJwCoACkAqgArAKoALQCqADQAAwAB
AAQAAwAMAAQAAAAvBvQAAADMAfkAAAAkCP4AAACBBwMBAAAjCAgBAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcAAgANAAkAAgAPAAsABIAAAAEAAADoGFt1AAAAAAAAKAAAAAQAAAAAAAAAAAAAAIoAxAAA
AAAACwAAAAAAAAAAAAAAkwDEBAAAAAAEAAAAAAAAAAAAAACKAJ0FAAAAAAsAAAAAAAAAAAAAAJMA
nQAAAAAAAAAAAAEAAADNBgAADgACAAAAAAAAX1Z0YmxHYXAxXzIwAF9WdGJsR2FwMl82MABfVnRi
bEdhcDFfMTIAU1RfYTBkYTAwOTE1YjZlNDliZTk4ZWRiZjhlZmM1NzFiODQAX1Z0YmxHYXAxXzQ1
AF9WdGJsR2FwMl82NQBfVnRibEdhcDNfMTE2AF9WdGJsR2FwM184ADxNb2R1bGU+AEdDAEdldFR5
cGVGcm9tQ0xTSUQATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3Js
aWIAQ29ycnVwdExvYWQASWdub3JlUmVhZE9ubHlSZWNvbW1lbmRlZABHdWlkAFdyaXRlUmVzUGFz
c3dvcmQAQ3JlYXRlSW5zdGFuY2UAZGVmYXVsdEluc3RhbmNlAGdldF9NZXNzYWdlAFZhcmlhYmxl
AElFbnVtZXJhYmxlAEVkaXRhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AEZpbGVuYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdl
dF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RN
b2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUARGlzcElkQXR0cmlidXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAEd1aWRBdHRyaWJ1
dGUAQ29tRXZlbnRJbnRlcmZhY2VBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEludGVyZmFjZVR5cGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAExDSURDb252ZXJzaW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AERlZmF1bHRNZW1iZXJBdHRyaWJ1dGUAVHlwZUlkZW50aWZpZXJBdHRyaWJ1dGUAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBDb0NsYXNzQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9p
bnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5
QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUAdmFsdWUAU2F2ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFN0cmluZwBNaXNzaW5nAF9Xb3JrYm9vawBSb3V0ZVdvcmtib29rAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3Jp
cHRUYXNrAExvY2FsAE1hcnNoYWwATWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsAFNjcmlw
dE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABSZWZyZXNoQWxsAFNUX2EwZGEwMDkx
NWI2ZTQ5YmU5OGVkYmY4ZWZjNTcxYjg0LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBPcGVuAFNjcmlwdE1haW4AT3JpZ2luAF9BcHBsaWNhdGlvbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3Vs
dHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBEZWxpbWl0ZXIAQ29udmVydGVyAEFjdGl2YXRv
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BT
ZXJ2aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U1RfYTBkYTAwOTE1YjZlNDliZTk4ZWRiZjhlZmM1NzFiODQuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNhdmVDaGFuZ2VzAFNUX2EwZGEwMDkxNWI2ZTQ5YmU5
OGVkYmY4ZWZjNTcxYjg0LlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBVcGRhdGVM
aW5rcwBnZXRfV29ya2Jvb2tzAFN5c3RlbS5Db2xsZWN0aW9ucwBXYWl0Rm9yUGVuZGluZ0ZpbmFs
aXplcnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAV29ya2Jvb2tFdmVudHMAQXBwRXZl
bnRzAEZvcm1hdABSZWxlYXNlQ29tT2JqZWN0AENvbGxlY3QAUXVpdABnZXRfX0RlZmF1bHQAZ2V0
X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQAV29ya2Jvb2tFdmVudHNfRXZlbnQAQXBwRXZlbnRzX0V2
ZW50AEFkZFRvTXJ1AE5vdGlmeQBnZXRfQXNzZW1ibHkAUmVhZE9ubHkAAAAAJ1UAcwBlAHIAOgA6
AGUAeABjAGUAbABGAGkAbABlAFAAYQB0AGgAAEkwADAAMAAyADQANQAwADAALQAwADAAMAAwAC0A
MAAwADAAMAAtAEMAMAAwADAALQAwADAAMAAwADAAMAAwADAAMAAwADQANgABI1UAcwBlAHIAOgA6
AGUAcgByAG8AcgBTAHQAcgBpAG4AZwAAcVMAVABfAGEAMABkAGEAMAAwADkAMQA1AGIANgBlADQA
OQBiAGUAOQA4AGUAZABiAGYAOABlAGYAYwA1ADcAMQBiADgANAAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAASqdAyc0310CPQlWfv3C+fQAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERVQQgAQEGByACARJxEnEFIAIBDg4FIAEBEnEFBwIOEj0FIAASgI0FIAASgJEG
IAESgJUcAyAAHAcAARJxEYCdBQABHBJxAgYcAwAAAQQAAQgcAyAADgQgAQEcBwABEnERgK0FIAAS
gLEHIAIBDhKAsQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAABHAETARsDBhJNAwYSUQMGEhAC
BggDBhE4BAAAEk0EAAASUQUAAQESUQQAABIQEyAPEiAOHBwcHBwcHBwcHBwcHBwEIAASLAYgAwEc
HBwECAASTQQIABJRBAgAEhAECAASLAMIAA4IAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRp
b25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2EwZGEwMDkxNWI2ZTQ5YmU5OGVkYmY4ZWZjNTcxYjg0
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAgBAIMHAAAAAAgB
AA8AAAAAAAgBADwCAAAAAAgBAAAAAAAAAAgBAC4BAAAAAAgBAAMAAAAAAAgBABUBAAAAAAgBAKwF
AAAAAAgBABsBAAAAAAYBAAIAAAApAQAkMDAwMjQ0MTMtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAw
MDQ2AABWAQAoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkFwcEV2ZW50cyhNaWNyb3Nv
ZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzAABYAQAkMDAwMjA4MTMtMDAwMC0wMDAw
LWMwMDAtMDAwMDAwMDAwMDQ2Lk1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVu
dHNfRXZlbnQAACkBACQwMDAyMDhENS0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAF8BAFpT
eXN0ZW0uT2JqZWN0LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkAACkBACQwMDAyMDhEQS0wMDAwLTAwMDAt
QzAwMC0wMDAwMDAwMDAwNDYAACkBACQwMDAyNDQxMi0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAw
NDYAAGABAC1NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuV29ya2Jvb2tFdmVudHMtTWlj
cm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmtib29rRXZlbnRzAABdAQAkMDAwMjA4MTMt
MDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2M01pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNl
bC5Xb3JrYm9va0V2ZW50c19FdmVudAAAKQEAJDAwMDIwOERCLTAwMDAtMDAwMC1DMDAwLTAwMDAw
MDAwMDA0NgAADQEACF9EZWZhdWx0AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNl
cy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0
cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVu
dGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB4OQAAAAAAAAAAAACSOQAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAhDkAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRs
bAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAW3XoGAAAAQBbdegYPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBhADAAZABhADAAMAA5ADEANQBiADYAZQA0ADkAYgBlADkAOABlAGQAYgBmADgAZQBmAGMA
NQA3ADEAYgA4ADQAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAz
ADcANgAuADMAMAAwADQAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBhADAAZABhADAAMAA5ADEANQBiADYAZQA0ADkAYgBlADkAOABlAGQAYgBmADgAZQBmAGMANQA3
ADEAYgA4ADQALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGEAMABkAGEAMAAwADkAMQA1AGIANgBlADQAOQBiAGUAOQA4AGUAZABiAGYAOABl
AGYAYwA1ADcAMQBiADgANAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBhADAAZABhADAAMAA5ADEANQBiADYAZQA0ADkAYgBlADkAOABlAGQAYgBmADgAZQBm
AGMANQA3ADEAYgA4ADQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADYAMwA3ADYALgAzADAAMAA0ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADYAMwA3ADYALgAzADAAMAA0ADMAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAApDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{EF38DC4B-EFD3-4646-B829-0F2E795FB753}"
      DTS:From="Package\Download remote files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\Unzip local files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{2D8E1CA8-4255-4E10-B98E-775C10EEB401}"
      DTS:From="Package\Check remote files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\Download remote files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 10]"
      DTS:CreationName=""
      DTS:DTSID="{C5AD5F14-2FCB-4AA4-98E9-3A34B43CB0B1}"
      DTS:From="Package\Execute SQL Update TRAN_DEUDA"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 10"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 11]"
      DTS:CreationName=""
      DTS:DTSID="{7AD05F12-CA66-4474-BD72-D58C469FFE46}"
      DTS:From="Package\Execute SQL Update MASTER_SERVICIO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 11"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 12]"
      DTS:CreationName=""
      DTS:DTSID="{3A97C39D-1FF5-4C4E-B880-7358B117C203}"
      DTS:From="Package\Update excel file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 12"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 13]"
      DTS:CreationName=""
      DTS:DTSID="{6D9D968B-21A8-4B40-A7BE-7D6B1E5564DB}"
      DTS:From="Package\Send excel email"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 13"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 14]"
      DTS:CreationName=""
      DTS:DTSID="{188DAE11-1523-44DF-92ED-BB50316B79D7}"
      DTS:From="Package\Send files information email"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 14"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 15]"
      DTS:CreationName=""
      DTS:DTSID="{36CBF556-3828-4038-9E10-7E182C7891FC}"
      DTS:From="Package\Load configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 15"
      DTS:To="Package\Check remote files" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 16]"
      DTS:CreationName=""
      DTS:DTSID="{FB55E9CC-072B-4AB5-BBC7-803E3DE6119A}"
      DTS:From="Package\Load configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 16"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 17]"
      DTS:CreationName=""
      DTS:DTSID="{5EF60BC9-E66F-4872-8440-82BCBD789C13}"
      DTS:From="Package\Star time update TRAN_DEUDA"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 17"
      DTS:To="Package\Execute SQL Update TRAN_DEUDA" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 18]"
      DTS:CreationName=""
      DTS:DTSID="{FC8D5C45-5C29-41F9-A09A-0C5D8B5A3C91}"
      DTS:From="Package\End time for update TRAN_DEUDA, start time update MASTER_SERVICIO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 18"
      DTS:To="Package\Execute SQL Update MASTER_SERVICIO" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 19]"
      DTS:CreationName=""
      DTS:DTSID="{31232F72-2A70-4412-B7FC-CCD75D739517}"
      DTS:From="Package\End time for update MASTER_SERVICIO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 19"
      DTS:To="Package\Send files information email" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{263B04DD-C6C0-47BB-AFD9-423F2D7CD153}"
      DTS:From="Package\Unzip local files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Star time update TRAN_DEUDA" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{132BDD84-8CAD-4616-97A0-665CB2FD97F1}"
      DTS:From="Package\Update excel file"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\Send excel email" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 4]"
      DTS:CreationName=""
      DTS:DTSID="{8F4BFE40-CF14-4533-87C2-BB17BD43800B}"
      DTS:From="Package\Execute SQL Update TRAN_DEUDA"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 4"
      DTS:To="Package\End time for update TRAN_DEUDA, start time update MASTER_SERVICIO" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 5]"
      DTS:CreationName=""
      DTS:DTSID="{A5E79470-782D-469F-AD87-32B182D58758}"
      DTS:From="Package\Send excel email"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 5"
      DTS:To="Package\Send files information email" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 6]"
      DTS:CreationName=""
      DTS:DTSID="{73223F66-649A-4E56-ABE3-AA7C6A27EB81}"
      DTS:From="Package\Execute SQL Update MASTER_SERVICIO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 6"
      DTS:To="Package\End time for update MASTER_SERVICIO" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 7]"
      DTS:CreationName=""
      DTS:DTSID="{53EE1D2A-2C95-482D-900B-51CE25ABC9DE}"
      DTS:From="Package\Check remote files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 7"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 8]"
      DTS:CreationName=""
      DTS:DTSID="{DF4C2DC6-6472-4C24-BDF1-40D30D320EBC}"
      DTS:From="Package\Download remote files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 8"
      DTS:To="Package\Error log"
      DTS:Value="1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 9]"
      DTS:CreationName=""
      DTS:DTSID="{6A3B3E46-D4D6-471B-8284-887934AB298F}"
      DTS:From="Package\Unzip local files"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 9"
      DTS:To="Package\Error log"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="166,42"
          Id="Package\Check remote files"
          TopLeft="321.328571428571,367.142857142857" />
        <NodeLayout
          Size="184,42"
          Id="Package\Download remote files"
          TopLeft="312.328571428571,550.142857142857" />
        <NodeLayout
          Size="268,42"
          Id="Package\End time for update MASTER_SERVICIO"
          TopLeft="1612.26285714286,628.571428571429" />
        <NodeLayout
          Size="234,71"
          Id="Package\End time for update TRAN_DEUDA, start time update MASTER_SERVICIO"
          TopLeft="1168.04285714286,817.434523809524" />
        <NodeLayout
          Size="120,42"
          Id="Package\Error log"
          TopLeft="832.571428571429,417.428571428572" />
        <NodeLayout
          Size="270,42"
          Id="Package\Execute SQL Update MASTER_SERVICIO"
          TopLeft="1611.26285714286,831.934523809524" />
        <NodeLayout
          Size="244,42"
          Id="Package\Execute SQL Update TRAN_DEUDA"
          TopLeft="742.714285714286,831.934523809524" />
        <NodeLayout
          Size="166,42"
          Id="Package\Load configuration"
          TopLeft="321.328571428571,184.142857142857" />
        <NodeLayout
          Size="158,42"
          Id="Package\Send excel email"
          TopLeft="1667.26285714286,369.84126984127" />
        <NodeLayout
          Size="210,42"
          Id="Package\Send files information email"
          TopLeft="1641.26285714286,192.178571428572" />
        <NodeLayout
          Size="227,42"
          Id="Package\Star time update TRAN_DEUDA"
          TopLeft="290.828571428571,831.934523809524" />
        <NodeLayout
          Size="152,42"
          Id="Package\Unzip local files"
          TopLeft="328.328571428571,724.476190476191" />
        <NodeLayout
          Size="157,42"
          Id="Package\Update excel file"
          TopLeft="1667.76285714286,518.825396825397" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="404.328571428571,592.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-24,132.333333333334"
              Start="0,0"
              End="-24,124.833333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.5729166666671" />
                  <mssgle:CubicBezierSegment
                    Point1="0,74.5729166666671"
                    Point2="0,78.5729166666671"
                    Point3="-4,78.5729166666671" />
                  <mssgle:LineSegment
                    End="-20,78.5729166666671" />
                  <mssgle:CubicBezierSegment
                    Point1="-20,78.5729166666671"
                    Point2="-24,78.5729166666671"
                    Point3="-24,82.5729166666671" />
                  <mssgle:LineSegment
                    End="-24,124.833333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.33955078125,83.5729166666671,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="404.328571428571,409.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-29.3333333333333,141"
              Start="0,0"
              End="-29.3333333333333,133.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.8706896551724" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.8706896551724"
                    Point2="0,83.8706896551724"
                    Point3="-4,83.8706896551724" />
                  <mssgle:LineSegment
                    End="-25.3333333333333,83.8706896551724" />
                  <mssgle:CubicBezierSegment
                    Point1="-25.3333333333333,83.8706896551724"
                    Point2="-29.3333333333333,83.8706896551724"
                    Point3="-29.3333333333333,87.8706896551724" />
                  <mssgle:LineSegment
                    End="-29.3333333333333,133.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-34.0062174479166,88.8706896551724,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 10]"
          TopLeft="864.714285714286,831.934523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27.857142857143,-372.505952380952"
              Start="0,0"
              End="27.857142857143,-365.005952380952">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-182.252976190476" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-182.252976190476"
                    Point2="0,-186.252976190476"
                    Point3="4,-186.252976190476" />
                  <mssgle:LineSegment
                    End="23.857142857143,-186.252976190476" />
                  <mssgle:CubicBezierSegment
                    Point1="23.857142857143,-186.252976190476"
                    Point2="27.857142857143,-186.252976190476"
                    Point3="27.857142857143,-190.252976190476" />
                  <mssgle:LineSegment
                    End="27.857142857143,-365.005952380952" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="2.3998800223215,-181.252976190476,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 11]"
          TopLeft="1702.59619047619,831.934523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-782.024761904764,-372.505952380952"
              Start="0,0"
              End="-782.024761904764,-365.005952380952">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-204.299246841594" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-204.299246841594"
                    Point2="0,-208.299246841594"
                    Point3="-4,-208.299246841594" />
                  <mssgle:LineSegment
                    End="-778.024761904764,-208.299246841594" />
                  <mssgle:CubicBezierSegment
                    Point1="-778.024761904764,-208.299246841594"
                    Point2="-782.024761904764,-208.299246841594"
                    Point3="-782.024761904764,-212.299246841594" />
                  <mssgle:LineSegment
                    End="-782.024761904764,-365.005952380952" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-402.541072358632,-203.299246841594,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 12]"
          TopLeft="1721.42952380952,518.825396825397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-800.858095238098,-59.3968253968254"
              Start="0,0"
              End="-800.858095238098,-51.8968253968254">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-29.3666744204079" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-29.3666744204079"
                    Point2="0,-33.3666744204079"
                    Point3="-4,-33.3666744204079" />
                  <mssgle:LineSegment
                    End="-796.858095238098,-33.3666744204079" />
                  <mssgle:CubicBezierSegment
                    Point1="-796.858095238098,-33.3666744204079"
                    Point2="-800.858095238098,-33.3666744204079"
                    Point3="-800.858095238098,-37.3666744204079" />
                  <mssgle:LineSegment
                    End="-800.858095238098,-51.8968253968254" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-411.957739025299,-28.3666744204079,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 13]"
          TopLeft="1667.26285714286,390.84126984127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-714.691428571431,47.587301587302"
              Start="0,0"
              End="-707.191428571431,47.587301587302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-353.345714285716,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-353.345714285716,0"
                    Point2="-357.345714285716,0"
                    Point3="-357.345714285716,4" />
                  <mssgle:LineSegment
                    End="-357.345714285716,43.587301587302" />
                  <mssgle:CubicBezierSegment
                    Point1="-357.345714285716,43.587301587302"
                    Point2="-357.345714285716,47.587301587302"
                    Point3="-361.345714285716,47.587301587302" />
                  <mssgle:LineSegment
                    End="-707.191428571431,47.587301587302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-368.874405691966,-15.421875,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 14]"
          TopLeft="1712.59619047619,234.178571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-786.424761904767,183.25"
              Start="0,0"
              End="-786.424761904767,175.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,107.218094157686" />
                  <mssgle:CubicBezierSegment
                    Point1="0,107.218094157686"
                    Point2="0,111.218094157686"
                    Point3="-4,111.218094157686" />
                  <mssgle:LineSegment
                    End="-782.424761904767,111.218094157686" />
                  <mssgle:CubicBezierSegment
                    Point1="-782.424761904767,111.218094157686"
                    Point2="-786.424761904767,111.218094157686"
                    Point3="-786.424761904767,115.218094157686" />
                  <mssgle:LineSegment
                    End="-786.424761904767,175.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-408.453728608634,116.218094157686,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 15]"
          TopLeft="377.995238095238,226.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="26.3333333333333,141"
              Start="0,0"
              End="26.3333333333333,133.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.2076372315036" />
                  <mssgle:CubicBezierSegment
                    Point1="0,53.2076372315036"
                    Point2="0,57.2076372315036"
                    Point3="4,57.2076372315036" />
                  <mssgle:LineSegment
                    End="22.3333333333333,57.2076372315036" />
                  <mssgle:CubicBezierSegment
                    Point1="22.3333333333333,57.2076372315036"
                    Point2="26.3333333333333,57.2076372315036"
                    Point3="26.3333333333333,61.2076372315036" />
                  <mssgle:LineSegment
                    End="26.3333333333333,133.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.17288411458335,62.2076372315036,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 16]"
          TopLeft="430.661904761904,226.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="443.242857142858,191.285714285715"
              Start="0,0"
              End="443.242857142858,183.785714285715">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.2134630936118" />
                  <mssgle:CubicBezierSegment
                    Point1="0,91.2134630936118"
                    Point2="0,95.2134630936118"
                    Point3="4,95.2134630936118" />
                  <mssgle:LineSegment
                    End="439.242857142858,95.2134630936118" />
                  <mssgle:CubicBezierSegment
                    Point1="439.242857142858,95.2134630936118"
                    Point2="443.242857142858,95.2134630936118"
                    Point3="443.242857142858,99.2134630936118" />
                  <mssgle:LineSegment
                    End="443.242857142858,183.785714285715" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="210.092737165179,100.213463093612,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 17]"
          TopLeft="517.828571428571,852.934523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="224.885714285715,0"
              Start="0,0"
              End="217.385714285715,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="217.385714285715,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="89.3533063616075,5,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 18]"
          TopLeft="1402.04285714286,852.934523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="209.219999999999,0"
              Start="0,0"
              End="201.719999999999,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="201.719999999999,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="81.5204492187495,5,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 19]"
          TopLeft="1746.26285714286,628.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="33.6666666666667,-394.392857142857"
              Start="0,0"
              End="33.6666666666667,-386.892857142857">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-230.846408317581" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-230.846408317581"
                    Point2="0,-234.846408317581"
                    Point3="4,-234.846408317581" />
                  <mssgle:LineSegment
                    End="29.6666666666667,-234.846408317581" />
                  <mssgle:CubicBezierSegment
                    Point1="29.6666666666667,-234.846408317581"
                    Point2="33.6666666666667,-234.846408317581"
                    Point3="33.6666666666667,-238.846408317581" />
                  <mssgle:LineSegment
                    End="33.6666666666667,-386.892857142857" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1.15990885416663,-229.846408317581,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="404.328571428571,766.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,65.4583333333331"
              Start="0,0"
              End="0,57.9583333333331">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,57.9583333333331" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.33955078125,24.2023111979166,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="1771.09619047619,518.825396825397">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-24.8333333333333,-106.984126984127"
              Start="0,0"
              End="-24.8333333333333,-99.4841269841274">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-39.4412218018778" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-39.4412218018778"
                    Point2="0,-43.4412218018778"
                    Point3="-4,-43.4412218018778" />
                  <mssgle:LineSegment
                    End="-20.8333333333333,-43.4412218018778" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.8333333333333,-43.4412218018778"
                    Point2="-24.8333333333333,-43.4412218018778"
                    Point3="-24.8333333333333,-47.4412218018778" />
                  <mssgle:LineSegment
                    End="-24.8333333333333,-99.4841269841274" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.7562174479166,-38.4412218018778,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 4]"
          TopLeft="986.714285714286,852.934523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="181.328571428575,0"
              Start="0,0"
              End="173.828571428575,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="173.828571428575,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="67.5747349330375,5,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 5]"
          TopLeft="1746.26285714286,369.84126984127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="33.6666666666667,-135.662698412698"
              Start="0,0"
              End="33.6666666666667,-128.162698412698">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-76.7821361058601" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-76.7821361058601"
                    Point2="0,-80.7821361058601"
                    Point3="4,-80.7821361058601" />
                  <mssgle:LineSegment
                    End="29.6666666666667,-80.7821361058601" />
                  <mssgle:CubicBezierSegment
                    Point1="29.6666666666667,-80.7821361058601"
                    Point2="33.6666666666667,-80.7821361058601"
                    Point3="33.6666666666667,-84.7821361058601" />
                  <mssgle:LineSegment
                    End="33.6666666666667,-128.162698412698" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-1.15990885416663,-75.7821361058601,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 6]"
          TopLeft="1789.92952380952,831.934523809524">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-43.6666666666667,-161.363095238096"
              Start="0,0"
              End="-43.6666666666667,-153.863095238096">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-61.1155936601446" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-61.1155936601446"
                    Point2="0,-65.1155936601446"
                    Point3="-4,-65.1155936601446" />
                  <mssgle:LineSegment
                    End="-39.6666666666667,-65.1155936601446" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.6666666666667,-65.1155936601446"
                    Point2="-43.6666666666667,-65.1155936601446"
                    Point3="-43.6666666666667,-69.1155936601446" />
                  <mssgle:LineSegment
                    End="-43.6666666666667,-153.863095238096" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.1728841145833,-60.1155936601446,35.986484375,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 7]"
          TopLeft="487.328571428571,388.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="345.242857142858,50.285714285715"
              Start="0,0"
              End="337.742857142858,50.285714285715">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="168.621428571429,0" />
                  <mssgle:CubicBezierSegment
                    Point1="168.621428571429,0"
                    Point2="172.621428571429,0"
                    Point3="172.621428571429,4" />
                  <mssgle:LineSegment
                    End="172.621428571429,46.285714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="172.621428571429,46.285714285715"
                    Point2="172.621428571429,50.285714285715"
                    Point3="176.621428571429,50.285714285715" />
                  <mssgle:LineSegment
                    End="337.742857142858,50.285714285715" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="161.092737165179,-15.421875,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 8]"
          TopLeft="433.661904761904,550.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="430.909523809525,-90.714285714285"
              Start="0,0"
              End="430.909523809525,-83.214285714285">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-46.8779406750763" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-46.8779406750763"
                    Point2="0,-50.8779406750763"
                    Point3="4,-50.8779406750763" />
                  <mssgle:LineSegment
                    End="426.909523809525,-50.8779406750763" />
                  <mssgle:CubicBezierSegment
                    Point1="426.909523809525,-50.8779406750763"
                    Point2="430.909523809525,-50.8779406750763"
                    Point3="430.909523809525,-54.8779406750763" />
                  <mssgle:LineSegment
                    End="430.909523809525,-83.214285714285" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="203.926070498513,-45.8779406750763,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 9]"
          TopLeft="428.328571428571,724.476190476191">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="436.242857142858,-265.047619047619"
              Start="0,0"
              End="436.242857142858,-257.547619047619">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-144.946068340881" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-144.946068340881"
                    Point2="0,-148.946068340881"
                    Point3="4,-148.946068340881" />
                  <mssgle:LineSegment
                    End="432.242857142858,-148.946068340881" />
                  <mssgle:CubicBezierSegment
                    Point1="432.242857142858,-148.946068340881"
                    Point2="436.242857142858,-148.946068340881"
                    Point3="436.242857142858,-152.946068340881" />
                  <mssgle:LineSegment
                    End="436.242857142858,-257.547619047619" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="206.592737165179,-143.946068340881,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Version: 0.1.&#xA;Name: LoadDataDialyPackage.dtsx.&#xA;Author: Rigoberto L. Salgado Reyes.&#xA;Date: 13/06/2017.&#xA;Desc: Update telefónica data in RJAbogados database."
          ParentId="Package"
          Size="418,110"
          Id="e0f58ee2-9482-4493-b057-1df8df8d8dc0"
          TopLeft="94.8571428571428,28">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="14.25"
              Color="#FF000000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>